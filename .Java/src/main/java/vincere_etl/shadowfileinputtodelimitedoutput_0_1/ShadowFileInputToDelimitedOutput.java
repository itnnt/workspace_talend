// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vincere_etl.shadowfileinputtodelimitedoutput_0_1;

import routines.XMLUtils;
import routines.validationCompleted;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.Relational;
import routines.GetRandomPhoneNum;
import routines.Mathematical;
import routines.externalValidationCompleted;
import routines.regexUtilitiesCompleted;
import routines.Numeric;
import routines.my_routines;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.TalendDate;
import routines.DemoRoutines;
import routines.r1;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: ShadowFileInputToDelimitedOutput Purpose: <br>
 * Description: <br>
 * 
 * @author
 * @version 7.2.1.20190620_1446
 * @status
 */
public class ShadowFileInputToDelimitedOutput implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "ShadowFileInputToDelimitedOutput";
	private final String projectName = "VINCERE_ETL";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					ShadowFileInputToDelimitedOutput.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(ShadowFileInputToDelimitedOutput.this,
									new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tFileInputDelimited_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputDelimited_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class RowStruct implements routines.system.IPersistableRow<RowStruct> {
		final static byte[] commonByteArrayLock_VINCERE_ETL_ShadowFileInputToDelimitedOutput = new byte[0];
		static byte[] commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput = new byte[0];

		public String row0;

		public String getRow0() {
			return this.row0;
		}

		public String row1;

		public String getRow1() {
			return this.row1;
		}

		public String row2;

		public String getRow2() {
			return this.row2;
		}

		public String row3;

		public String getRow3() {
			return this.row3;
		}

		public String row4;

		public String getRow4() {
			return this.row4;
		}

		public String row5;

		public String getRow5() {
			return this.row5;
		}

		public String row6;

		public String getRow6() {
			return this.row6;
		}

		public String row7;

		public String getRow7() {
			return this.row7;
		}

		public String row8;

		public String getRow8() {
			return this.row8;
		}

		public String row9;

		public String getRow9() {
			return this.row9;
		}

		public String row10;

		public String getRow10() {
			return this.row10;
		}

		public String row11;

		public String getRow11() {
			return this.row11;
		}

		public String row12;

		public String getRow12() {
			return this.row12;
		}

		public String row13;

		public String getRow13() {
			return this.row13;
		}

		public String row14;

		public String getRow14() {
			return this.row14;
		}

		public String row15;

		public String getRow15() {
			return this.row15;
		}

		public String row16;

		public String getRow16() {
			return this.row16;
		}

		public String row17;

		public String getRow17() {
			return this.row17;
		}

		public String row18;

		public String getRow18() {
			return this.row18;
		}

		public String row19;

		public String getRow19() {
			return this.row19;
		}

		public String row20;

		public String getRow20() {
			return this.row20;
		}

		public String row21;

		public String getRow21() {
			return this.row21;
		}

		public String row22;

		public String getRow22() {
			return this.row22;
		}

		public String row23;

		public String getRow23() {
			return this.row23;
		}

		public String row24;

		public String getRow24() {
			return this.row24;
		}

		public String row25;

		public String getRow25() {
			return this.row25;
		}

		public String row26;

		public String getRow26() {
			return this.row26;
		}

		public String row27;

		public String getRow27() {
			return this.row27;
		}

		public String row28;

		public String getRow28() {
			return this.row28;
		}

		public String row29;

		public String getRow29() {
			return this.row29;
		}

		public String row30;

		public String getRow30() {
			return this.row30;
		}

		public String row31;

		public String getRow31() {
			return this.row31;
		}

		public String row32;

		public String getRow32() {
			return this.row32;
		}

		public String row33;

		public String getRow33() {
			return this.row33;
		}

		public String row34;

		public String getRow34() {
			return this.row34;
		}

		public String row35;

		public String getRow35() {
			return this.row35;
		}

		public String row36;

		public String getRow36() {
			return this.row36;
		}

		public String row37;

		public String getRow37() {
			return this.row37;
		}

		public String row38;

		public String getRow38() {
			return this.row38;
		}

		public String row39;

		public String getRow39() {
			return this.row39;
		}

		public String row40;

		public String getRow40() {
			return this.row40;
		}

		public String row41;

		public String getRow41() {
			return this.row41;
		}

		public String row42;

		public String getRow42() {
			return this.row42;
		}

		public String row43;

		public String getRow43() {
			return this.row43;
		}

		public String row44;

		public String getRow44() {
			return this.row44;
		}

		public String row45;

		public String getRow45() {
			return this.row45;
		}

		public String row46;

		public String getRow46() {
			return this.row46;
		}

		public String row47;

		public String getRow47() {
			return this.row47;
		}

		public String row48;

		public String getRow48() {
			return this.row48;
		}

		public String row49;

		public String getRow49() {
			return this.row49;
		}

		public String row50;

		public String getRow50() {
			return this.row50;
		}

		public String row51;

		public String getRow51() {
			return this.row51;
		}

		public String row52;

		public String getRow52() {
			return this.row52;
		}

		public String row53;

		public String getRow53() {
			return this.row53;
		}

		public String row54;

		public String getRow54() {
			return this.row54;
		}

		public String row55;

		public String getRow55() {
			return this.row55;
		}

		public String row56;

		public String getRow56() {
			return this.row56;
		}

		public String row57;

		public String getRow57() {
			return this.row57;
		}

		public String row58;

		public String getRow58() {
			return this.row58;
		}

		public String row59;

		public String getRow59() {
			return this.row59;
		}

		public String row60;

		public String getRow60() {
			return this.row60;
		}

		public String row61;

		public String getRow61() {
			return this.row61;
		}

		public String row62;

		public String getRow62() {
			return this.row62;
		}

		public String row63;

		public String getRow63() {
			return this.row63;
		}

		public String row64;

		public String getRow64() {
			return this.row64;
		}

		public String row65;

		public String getRow65() {
			return this.row65;
		}

		public String row66;

		public String getRow66() {
			return this.row66;
		}

		public String row67;

		public String getRow67() {
			return this.row67;
		}

		public String row68;

		public String getRow68() {
			return this.row68;
		}

		public String row69;

		public String getRow69() {
			return this.row69;
		}

		public String row70;

		public String getRow70() {
			return this.row70;
		}

		public String row71;

		public String getRow71() {
			return this.row71;
		}

		public String row72;

		public String getRow72() {
			return this.row72;
		}

		public String row73;

		public String getRow73() {
			return this.row73;
		}

		public String row74;

		public String getRow74() {
			return this.row74;
		}

		public String row75;

		public String getRow75() {
			return this.row75;
		}

		public String row76;

		public String getRow76() {
			return this.row76;
		}

		public String row77;

		public String getRow77() {
			return this.row77;
		}

		public String row78;

		public String getRow78() {
			return this.row78;
		}

		public String row79;

		public String getRow79() {
			return this.row79;
		}

		public String row80;

		public String getRow80() {
			return this.row80;
		}

		public String row81;

		public String getRow81() {
			return this.row81;
		}

		public String row82;

		public String getRow82() {
			return this.row82;
		}

		public String row83;

		public String getRow83() {
			return this.row83;
		}

		public String row84;

		public String getRow84() {
			return this.row84;
		}

		public String row85;

		public String getRow85() {
			return this.row85;
		}

		public String row86;

		public String getRow86() {
			return this.row86;
		}

		public String row87;

		public String getRow87() {
			return this.row87;
		}

		public String row88;

		public String getRow88() {
			return this.row88;
		}

		public String row89;

		public String getRow89() {
			return this.row89;
		}

		public String row90;

		public String getRow90() {
			return this.row90;
		}

		public String row91;

		public String getRow91() {
			return this.row91;
		}

		public String row92;

		public String getRow92() {
			return this.row92;
		}

		public String row93;

		public String getRow93() {
			return this.row93;
		}

		public String row94;

		public String getRow94() {
			return this.row94;
		}

		public String row95;

		public String getRow95() {
			return this.row95;
		}

		public String row96;

		public String getRow96() {
			return this.row96;
		}

		public String row97;

		public String getRow97() {
			return this.row97;
		}

		public String row98;

		public String getRow98() {
			return this.row98;
		}

		public String row99;

		public String getRow99() {
			return this.row99;
		}

		public String row100;

		public String getRow100() {
			return this.row100;
		}

		public String row101;

		public String getRow101() {
			return this.row101;
		}

		public String row102;

		public String getRow102() {
			return this.row102;
		}

		public String row103;

		public String getRow103() {
			return this.row103;
		}

		public String row104;

		public String getRow104() {
			return this.row104;
		}

		public String row105;

		public String getRow105() {
			return this.row105;
		}

		public String row106;

		public String getRow106() {
			return this.row106;
		}

		public String row107;

		public String getRow107() {
			return this.row107;
		}

		public String row108;

		public String getRow108() {
			return this.row108;
		}

		public String row109;

		public String getRow109() {
			return this.row109;
		}

		public String row110;

		public String getRow110() {
			return this.row110;
		}

		public String row111;

		public String getRow111() {
			return this.row111;
		}

		public String row112;

		public String getRow112() {
			return this.row112;
		}

		public String row113;

		public String getRow113() {
			return this.row113;
		}

		public String row114;

		public String getRow114() {
			return this.row114;
		}

		public String row115;

		public String getRow115() {
			return this.row115;
		}

		public String row116;

		public String getRow116() {
			return this.row116;
		}

		public String row117;

		public String getRow117() {
			return this.row117;
		}

		public String row118;

		public String getRow118() {
			return this.row118;
		}

		public String row119;

		public String getRow119() {
			return this.row119;
		}

		public String row120;

		public String getRow120() {
			return this.row120;
		}

		public String row121;

		public String getRow121() {
			return this.row121;
		}

		public String row122;

		public String getRow122() {
			return this.row122;
		}

		public String row123;

		public String getRow123() {
			return this.row123;
		}

		public String row124;

		public String getRow124() {
			return this.row124;
		}

		public String row125;

		public String getRow125() {
			return this.row125;
		}

		public String row126;

		public String getRow126() {
			return this.row126;
		}

		public String row127;

		public String getRow127() {
			return this.row127;
		}

		public String row128;

		public String getRow128() {
			return this.row128;
		}

		public String row129;

		public String getRow129() {
			return this.row129;
		}

		public String row130;

		public String getRow130() {
			return this.row130;
		}

		public String row131;

		public String getRow131() {
			return this.row131;
		}

		public String row132;

		public String getRow132() {
			return this.row132;
		}

		public String row133;

		public String getRow133() {
			return this.row133;
		}

		public String row134;

		public String getRow134() {
			return this.row134;
		}

		public String row135;

		public String getRow135() {
			return this.row135;
		}

		public String row136;

		public String getRow136() {
			return this.row136;
		}

		public String row137;

		public String getRow137() {
			return this.row137;
		}

		public String row138;

		public String getRow138() {
			return this.row138;
		}

		public String row139;

		public String getRow139() {
			return this.row139;
		}

		public String row140;

		public String getRow140() {
			return this.row140;
		}

		public String row141;

		public String getRow141() {
			return this.row141;
		}

		public String row142;

		public String getRow142() {
			return this.row142;
		}

		public String row143;

		public String getRow143() {
			return this.row143;
		}

		public String row144;

		public String getRow144() {
			return this.row144;
		}

		public String row145;

		public String getRow145() {
			return this.row145;
		}

		public String row146;

		public String getRow146() {
			return this.row146;
		}

		public String row147;

		public String getRow147() {
			return this.row147;
		}

		public String row148;

		public String getRow148() {
			return this.row148;
		}

		public String row149;

		public String getRow149() {
			return this.row149;
		}

		public String row150;

		public String getRow150() {
			return this.row150;
		}

		public String row151;

		public String getRow151() {
			return this.row151;
		}

		public String row152;

		public String getRow152() {
			return this.row152;
		}

		public String row153;

		public String getRow153() {
			return this.row153;
		}

		public String row154;

		public String getRow154() {
			return this.row154;
		}

		public String row155;

		public String getRow155() {
			return this.row155;
		}

		public String row156;

		public String getRow156() {
			return this.row156;
		}

		public String row157;

		public String getRow157() {
			return this.row157;
		}

		public String row158;

		public String getRow158() {
			return this.row158;
		}

		public String row159;

		public String getRow159() {
			return this.row159;
		}

		public String row160;

		public String getRow160() {
			return this.row160;
		}

		public String row161;

		public String getRow161() {
			return this.row161;
		}

		public String row162;

		public String getRow162() {
			return this.row162;
		}

		public String row163;

		public String getRow163() {
			return this.row163;
		}

		public String row164;

		public String getRow164() {
			return this.row164;
		}

		public String row165;

		public String getRow165() {
			return this.row165;
		}

		public String row166;

		public String getRow166() {
			return this.row166;
		}

		public String row167;

		public String getRow167() {
			return this.row167;
		}

		public String row168;

		public String getRow168() {
			return this.row168;
		}

		public String row169;

		public String getRow169() {
			return this.row169;
		}

		public String row170;

		public String getRow170() {
			return this.row170;
		}

		public String row171;

		public String getRow171() {
			return this.row171;
		}

		public String row172;

		public String getRow172() {
			return this.row172;
		}

		public String row173;

		public String getRow173() {
			return this.row173;
		}

		public String row174;

		public String getRow174() {
			return this.row174;
		}

		public String row175;

		public String getRow175() {
			return this.row175;
		}

		public String row176;

		public String getRow176() {
			return this.row176;
		}

		public String row177;

		public String getRow177() {
			return this.row177;
		}

		public String row178;

		public String getRow178() {
			return this.row178;
		}

		public String row179;

		public String getRow179() {
			return this.row179;
		}

		public String row180;

		public String getRow180() {
			return this.row180;
		}

		public String row181;

		public String getRow181() {
			return this.row181;
		}

		public String row182;

		public String getRow182() {
			return this.row182;
		}

		public String row183;

		public String getRow183() {
			return this.row183;
		}

		public String row184;

		public String getRow184() {
			return this.row184;
		}

		public String row185;

		public String getRow185() {
			return this.row185;
		}

		public String row186;

		public String getRow186() {
			return this.row186;
		}

		public String row187;

		public String getRow187() {
			return this.row187;
		}

		public String row188;

		public String getRow188() {
			return this.row188;
		}

		public String row189;

		public String getRow189() {
			return this.row189;
		}

		public String row190;

		public String getRow190() {
			return this.row190;
		}

		public String row191;

		public String getRow191() {
			return this.row191;
		}

		public String row192;

		public String getRow192() {
			return this.row192;
		}

		public String row193;

		public String getRow193() {
			return this.row193;
		}

		public String row194;

		public String getRow194() {
			return this.row194;
		}

		public String row195;

		public String getRow195() {
			return this.row195;
		}

		public String row196;

		public String getRow196() {
			return this.row196;
		}

		public String row197;

		public String getRow197() {
			return this.row197;
		}

		public String row198;

		public String getRow198() {
			return this.row198;
		}

		public String row199;

		public String getRow199() {
			return this.row199;
		}

		public String row200;

		public String getRow200() {
			return this.row200;
		}

		public String row201;

		public String getRow201() {
			return this.row201;
		}

		public String row202;

		public String getRow202() {
			return this.row202;
		}

		public String row203;

		public String getRow203() {
			return this.row203;
		}

		public String row204;

		public String getRow204() {
			return this.row204;
		}

		public String row205;

		public String getRow205() {
			return this.row205;
		}

		public String row206;

		public String getRow206() {
			return this.row206;
		}

		public String row207;

		public String getRow207() {
			return this.row207;
		}

		public String row208;

		public String getRow208() {
			return this.row208;
		}

		public String row209;

		public String getRow209() {
			return this.row209;
		}

		public String row210;

		public String getRow210() {
			return this.row210;
		}

		public String row211;

		public String getRow211() {
			return this.row211;
		}

		public String row212;

		public String getRow212() {
			return this.row212;
		}

		public String row213;

		public String getRow213() {
			return this.row213;
		}

		public String row214;

		public String getRow214() {
			return this.row214;
		}

		public String row215;

		public String getRow215() {
			return this.row215;
		}

		public String row216;

		public String getRow216() {
			return this.row216;
		}

		public String row217;

		public String getRow217() {
			return this.row217;
		}

		public String row218;

		public String getRow218() {
			return this.row218;
		}

		public String row219;

		public String getRow219() {
			return this.row219;
		}

		public String row220;

		public String getRow220() {
			return this.row220;
		}

		public String row221;

		public String getRow221() {
			return this.row221;
		}

		public String row222;

		public String getRow222() {
			return this.row222;
		}

		public String row223;

		public String getRow223() {
			return this.row223;
		}

		public String row224;

		public String getRow224() {
			return this.row224;
		}

		public String row225;

		public String getRow225() {
			return this.row225;
		}

		public String row226;

		public String getRow226() {
			return this.row226;
		}

		public String row227;

		public String getRow227() {
			return this.row227;
		}

		public String row228;

		public String getRow228() {
			return this.row228;
		}

		public String row229;

		public String getRow229() {
			return this.row229;
		}

		public String row230;

		public String getRow230() {
			return this.row230;
		}

		public String row231;

		public String getRow231() {
			return this.row231;
		}

		public String row232;

		public String getRow232() {
			return this.row232;
		}

		public String row233;

		public String getRow233() {
			return this.row233;
		}

		public String row234;

		public String getRow234() {
			return this.row234;
		}

		public String row235;

		public String getRow235() {
			return this.row235;
		}

		public String row236;

		public String getRow236() {
			return this.row236;
		}

		public String row237;

		public String getRow237() {
			return this.row237;
		}

		public String row238;

		public String getRow238() {
			return this.row238;
		}

		public String row239;

		public String getRow239() {
			return this.row239;
		}

		public String row240;

		public String getRow240() {
			return this.row240;
		}

		public String row241;

		public String getRow241() {
			return this.row241;
		}

		public String row242;

		public String getRow242() {
			return this.row242;
		}

		public String row243;

		public String getRow243() {
			return this.row243;
		}

		public String row244;

		public String getRow244() {
			return this.row244;
		}

		public String row245;

		public String getRow245() {
			return this.row245;
		}

		public String row246;

		public String getRow246() {
			return this.row246;
		}

		public String row247;

		public String getRow247() {
			return this.row247;
		}

		public String row248;

		public String getRow248() {
			return this.row248;
		}

		public String row249;

		public String getRow249() {
			return this.row249;
		}

		public String row250;

		public String getRow250() {
			return this.row250;
		}

		public String row251;

		public String getRow251() {
			return this.row251;
		}

		public String row252;

		public String getRow252() {
			return this.row252;
		}

		public String row253;

		public String getRow253() {
			return this.row253;
		}

		public String row254;

		public String getRow254() {
			return this.row254;
		}

		public String row255;

		public String getRow255() {
			return this.row255;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput.length) {
					if (length < 1024 && commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput.length == 0) {
						commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput = new byte[1024];
					} else {
						commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput, 0, length);
				strReturn = new String(commonByteArray_VINCERE_ETL_ShadowFileInputToDelimitedOutput, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_VINCERE_ETL_ShadowFileInputToDelimitedOutput) {

				try {

					int length = 0;

					this.row0 = readString(dis);

					this.row1 = readString(dis);

					this.row2 = readString(dis);

					this.row3 = readString(dis);

					this.row4 = readString(dis);

					this.row5 = readString(dis);

					this.row6 = readString(dis);

					this.row7 = readString(dis);

					this.row8 = readString(dis);

					this.row9 = readString(dis);

					this.row10 = readString(dis);

					this.row11 = readString(dis);

					this.row12 = readString(dis);

					this.row13 = readString(dis);

					this.row14 = readString(dis);

					this.row15 = readString(dis);

					this.row16 = readString(dis);

					this.row17 = readString(dis);

					this.row18 = readString(dis);

					this.row19 = readString(dis);

					this.row20 = readString(dis);

					this.row21 = readString(dis);

					this.row22 = readString(dis);

					this.row23 = readString(dis);

					this.row24 = readString(dis);

					this.row25 = readString(dis);

					this.row26 = readString(dis);

					this.row27 = readString(dis);

					this.row28 = readString(dis);

					this.row29 = readString(dis);

					this.row30 = readString(dis);

					this.row31 = readString(dis);

					this.row32 = readString(dis);

					this.row33 = readString(dis);

					this.row34 = readString(dis);

					this.row35 = readString(dis);

					this.row36 = readString(dis);

					this.row37 = readString(dis);

					this.row38 = readString(dis);

					this.row39 = readString(dis);

					this.row40 = readString(dis);

					this.row41 = readString(dis);

					this.row42 = readString(dis);

					this.row43 = readString(dis);

					this.row44 = readString(dis);

					this.row45 = readString(dis);

					this.row46 = readString(dis);

					this.row47 = readString(dis);

					this.row48 = readString(dis);

					this.row49 = readString(dis);

					this.row50 = readString(dis);

					this.row51 = readString(dis);

					this.row52 = readString(dis);

					this.row53 = readString(dis);

					this.row54 = readString(dis);

					this.row55 = readString(dis);

					this.row56 = readString(dis);

					this.row57 = readString(dis);

					this.row58 = readString(dis);

					this.row59 = readString(dis);

					this.row60 = readString(dis);

					this.row61 = readString(dis);

					this.row62 = readString(dis);

					this.row63 = readString(dis);

					this.row64 = readString(dis);

					this.row65 = readString(dis);

					this.row66 = readString(dis);

					this.row67 = readString(dis);

					this.row68 = readString(dis);

					this.row69 = readString(dis);

					this.row70 = readString(dis);

					this.row71 = readString(dis);

					this.row72 = readString(dis);

					this.row73 = readString(dis);

					this.row74 = readString(dis);

					this.row75 = readString(dis);

					this.row76 = readString(dis);

					this.row77 = readString(dis);

					this.row78 = readString(dis);

					this.row79 = readString(dis);

					this.row80 = readString(dis);

					this.row81 = readString(dis);

					this.row82 = readString(dis);

					this.row83 = readString(dis);

					this.row84 = readString(dis);

					this.row85 = readString(dis);

					this.row86 = readString(dis);

					this.row87 = readString(dis);

					this.row88 = readString(dis);

					this.row89 = readString(dis);

					this.row90 = readString(dis);

					this.row91 = readString(dis);

					this.row92 = readString(dis);

					this.row93 = readString(dis);

					this.row94 = readString(dis);

					this.row95 = readString(dis);

					this.row96 = readString(dis);

					this.row97 = readString(dis);

					this.row98 = readString(dis);

					this.row99 = readString(dis);

					this.row100 = readString(dis);

					this.row101 = readString(dis);

					this.row102 = readString(dis);

					this.row103 = readString(dis);

					this.row104 = readString(dis);

					this.row105 = readString(dis);

					this.row106 = readString(dis);

					this.row107 = readString(dis);

					this.row108 = readString(dis);

					this.row109 = readString(dis);

					this.row110 = readString(dis);

					this.row111 = readString(dis);

					this.row112 = readString(dis);

					this.row113 = readString(dis);

					this.row114 = readString(dis);

					this.row115 = readString(dis);

					this.row116 = readString(dis);

					this.row117 = readString(dis);

					this.row118 = readString(dis);

					this.row119 = readString(dis);

					this.row120 = readString(dis);

					this.row121 = readString(dis);

					this.row122 = readString(dis);

					this.row123 = readString(dis);

					this.row124 = readString(dis);

					this.row125 = readString(dis);

					this.row126 = readString(dis);

					this.row127 = readString(dis);

					this.row128 = readString(dis);

					this.row129 = readString(dis);

					this.row130 = readString(dis);

					this.row131 = readString(dis);

					this.row132 = readString(dis);

					this.row133 = readString(dis);

					this.row134 = readString(dis);

					this.row135 = readString(dis);

					this.row136 = readString(dis);

					this.row137 = readString(dis);

					this.row138 = readString(dis);

					this.row139 = readString(dis);

					this.row140 = readString(dis);

					this.row141 = readString(dis);

					this.row142 = readString(dis);

					this.row143 = readString(dis);

					this.row144 = readString(dis);

					this.row145 = readString(dis);

					this.row146 = readString(dis);

					this.row147 = readString(dis);

					this.row148 = readString(dis);

					this.row149 = readString(dis);

					this.row150 = readString(dis);

					this.row151 = readString(dis);

					this.row152 = readString(dis);

					this.row153 = readString(dis);

					this.row154 = readString(dis);

					this.row155 = readString(dis);

					this.row156 = readString(dis);

					this.row157 = readString(dis);

					this.row158 = readString(dis);

					this.row159 = readString(dis);

					this.row160 = readString(dis);

					this.row161 = readString(dis);

					this.row162 = readString(dis);

					this.row163 = readString(dis);

					this.row164 = readString(dis);

					this.row165 = readString(dis);

					this.row166 = readString(dis);

					this.row167 = readString(dis);

					this.row168 = readString(dis);

					this.row169 = readString(dis);

					this.row170 = readString(dis);

					this.row171 = readString(dis);

					this.row172 = readString(dis);

					this.row173 = readString(dis);

					this.row174 = readString(dis);

					this.row175 = readString(dis);

					this.row176 = readString(dis);

					this.row177 = readString(dis);

					this.row178 = readString(dis);

					this.row179 = readString(dis);

					this.row180 = readString(dis);

					this.row181 = readString(dis);

					this.row182 = readString(dis);

					this.row183 = readString(dis);

					this.row184 = readString(dis);

					this.row185 = readString(dis);

					this.row186 = readString(dis);

					this.row187 = readString(dis);

					this.row188 = readString(dis);

					this.row189 = readString(dis);

					this.row190 = readString(dis);

					this.row191 = readString(dis);

					this.row192 = readString(dis);

					this.row193 = readString(dis);

					this.row194 = readString(dis);

					this.row195 = readString(dis);

					this.row196 = readString(dis);

					this.row197 = readString(dis);

					this.row198 = readString(dis);

					this.row199 = readString(dis);

					this.row200 = readString(dis);

					this.row201 = readString(dis);

					this.row202 = readString(dis);

					this.row203 = readString(dis);

					this.row204 = readString(dis);

					this.row205 = readString(dis);

					this.row206 = readString(dis);

					this.row207 = readString(dis);

					this.row208 = readString(dis);

					this.row209 = readString(dis);

					this.row210 = readString(dis);

					this.row211 = readString(dis);

					this.row212 = readString(dis);

					this.row213 = readString(dis);

					this.row214 = readString(dis);

					this.row215 = readString(dis);

					this.row216 = readString(dis);

					this.row217 = readString(dis);

					this.row218 = readString(dis);

					this.row219 = readString(dis);

					this.row220 = readString(dis);

					this.row221 = readString(dis);

					this.row222 = readString(dis);

					this.row223 = readString(dis);

					this.row224 = readString(dis);

					this.row225 = readString(dis);

					this.row226 = readString(dis);

					this.row227 = readString(dis);

					this.row228 = readString(dis);

					this.row229 = readString(dis);

					this.row230 = readString(dis);

					this.row231 = readString(dis);

					this.row232 = readString(dis);

					this.row233 = readString(dis);

					this.row234 = readString(dis);

					this.row235 = readString(dis);

					this.row236 = readString(dis);

					this.row237 = readString(dis);

					this.row238 = readString(dis);

					this.row239 = readString(dis);

					this.row240 = readString(dis);

					this.row241 = readString(dis);

					this.row242 = readString(dis);

					this.row243 = readString(dis);

					this.row244 = readString(dis);

					this.row245 = readString(dis);

					this.row246 = readString(dis);

					this.row247 = readString(dis);

					this.row248 = readString(dis);

					this.row249 = readString(dis);

					this.row250 = readString(dis);

					this.row251 = readString(dis);

					this.row252 = readString(dis);

					this.row253 = readString(dis);

					this.row254 = readString(dis);

					this.row255 = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.row0, dos);

				// String

				writeString(this.row1, dos);

				// String

				writeString(this.row2, dos);

				// String

				writeString(this.row3, dos);

				// String

				writeString(this.row4, dos);

				// String

				writeString(this.row5, dos);

				// String

				writeString(this.row6, dos);

				// String

				writeString(this.row7, dos);

				// String

				writeString(this.row8, dos);

				// String

				writeString(this.row9, dos);

				// String

				writeString(this.row10, dos);

				// String

				writeString(this.row11, dos);

				// String

				writeString(this.row12, dos);

				// String

				writeString(this.row13, dos);

				// String

				writeString(this.row14, dos);

				// String

				writeString(this.row15, dos);

				// String

				writeString(this.row16, dos);

				// String

				writeString(this.row17, dos);

				// String

				writeString(this.row18, dos);

				// String

				writeString(this.row19, dos);

				// String

				writeString(this.row20, dos);

				// String

				writeString(this.row21, dos);

				// String

				writeString(this.row22, dos);

				// String

				writeString(this.row23, dos);

				// String

				writeString(this.row24, dos);

				// String

				writeString(this.row25, dos);

				// String

				writeString(this.row26, dos);

				// String

				writeString(this.row27, dos);

				// String

				writeString(this.row28, dos);

				// String

				writeString(this.row29, dos);

				// String

				writeString(this.row30, dos);

				// String

				writeString(this.row31, dos);

				// String

				writeString(this.row32, dos);

				// String

				writeString(this.row33, dos);

				// String

				writeString(this.row34, dos);

				// String

				writeString(this.row35, dos);

				// String

				writeString(this.row36, dos);

				// String

				writeString(this.row37, dos);

				// String

				writeString(this.row38, dos);

				// String

				writeString(this.row39, dos);

				// String

				writeString(this.row40, dos);

				// String

				writeString(this.row41, dos);

				// String

				writeString(this.row42, dos);

				// String

				writeString(this.row43, dos);

				// String

				writeString(this.row44, dos);

				// String

				writeString(this.row45, dos);

				// String

				writeString(this.row46, dos);

				// String

				writeString(this.row47, dos);

				// String

				writeString(this.row48, dos);

				// String

				writeString(this.row49, dos);

				// String

				writeString(this.row50, dos);

				// String

				writeString(this.row51, dos);

				// String

				writeString(this.row52, dos);

				// String

				writeString(this.row53, dos);

				// String

				writeString(this.row54, dos);

				// String

				writeString(this.row55, dos);

				// String

				writeString(this.row56, dos);

				// String

				writeString(this.row57, dos);

				// String

				writeString(this.row58, dos);

				// String

				writeString(this.row59, dos);

				// String

				writeString(this.row60, dos);

				// String

				writeString(this.row61, dos);

				// String

				writeString(this.row62, dos);

				// String

				writeString(this.row63, dos);

				// String

				writeString(this.row64, dos);

				// String

				writeString(this.row65, dos);

				// String

				writeString(this.row66, dos);

				// String

				writeString(this.row67, dos);

				// String

				writeString(this.row68, dos);

				// String

				writeString(this.row69, dos);

				// String

				writeString(this.row70, dos);

				// String

				writeString(this.row71, dos);

				// String

				writeString(this.row72, dos);

				// String

				writeString(this.row73, dos);

				// String

				writeString(this.row74, dos);

				// String

				writeString(this.row75, dos);

				// String

				writeString(this.row76, dos);

				// String

				writeString(this.row77, dos);

				// String

				writeString(this.row78, dos);

				// String

				writeString(this.row79, dos);

				// String

				writeString(this.row80, dos);

				// String

				writeString(this.row81, dos);

				// String

				writeString(this.row82, dos);

				// String

				writeString(this.row83, dos);

				// String

				writeString(this.row84, dos);

				// String

				writeString(this.row85, dos);

				// String

				writeString(this.row86, dos);

				// String

				writeString(this.row87, dos);

				// String

				writeString(this.row88, dos);

				// String

				writeString(this.row89, dos);

				// String

				writeString(this.row90, dos);

				// String

				writeString(this.row91, dos);

				// String

				writeString(this.row92, dos);

				// String

				writeString(this.row93, dos);

				// String

				writeString(this.row94, dos);

				// String

				writeString(this.row95, dos);

				// String

				writeString(this.row96, dos);

				// String

				writeString(this.row97, dos);

				// String

				writeString(this.row98, dos);

				// String

				writeString(this.row99, dos);

				// String

				writeString(this.row100, dos);

				// String

				writeString(this.row101, dos);

				// String

				writeString(this.row102, dos);

				// String

				writeString(this.row103, dos);

				// String

				writeString(this.row104, dos);

				// String

				writeString(this.row105, dos);

				// String

				writeString(this.row106, dos);

				// String

				writeString(this.row107, dos);

				// String

				writeString(this.row108, dos);

				// String

				writeString(this.row109, dos);

				// String

				writeString(this.row110, dos);

				// String

				writeString(this.row111, dos);

				// String

				writeString(this.row112, dos);

				// String

				writeString(this.row113, dos);

				// String

				writeString(this.row114, dos);

				// String

				writeString(this.row115, dos);

				// String

				writeString(this.row116, dos);

				// String

				writeString(this.row117, dos);

				// String

				writeString(this.row118, dos);

				// String

				writeString(this.row119, dos);

				// String

				writeString(this.row120, dos);

				// String

				writeString(this.row121, dos);

				// String

				writeString(this.row122, dos);

				// String

				writeString(this.row123, dos);

				// String

				writeString(this.row124, dos);

				// String

				writeString(this.row125, dos);

				// String

				writeString(this.row126, dos);

				// String

				writeString(this.row127, dos);

				// String

				writeString(this.row128, dos);

				// String

				writeString(this.row129, dos);

				// String

				writeString(this.row130, dos);

				// String

				writeString(this.row131, dos);

				// String

				writeString(this.row132, dos);

				// String

				writeString(this.row133, dos);

				// String

				writeString(this.row134, dos);

				// String

				writeString(this.row135, dos);

				// String

				writeString(this.row136, dos);

				// String

				writeString(this.row137, dos);

				// String

				writeString(this.row138, dos);

				// String

				writeString(this.row139, dos);

				// String

				writeString(this.row140, dos);

				// String

				writeString(this.row141, dos);

				// String

				writeString(this.row142, dos);

				// String

				writeString(this.row143, dos);

				// String

				writeString(this.row144, dos);

				// String

				writeString(this.row145, dos);

				// String

				writeString(this.row146, dos);

				// String

				writeString(this.row147, dos);

				// String

				writeString(this.row148, dos);

				// String

				writeString(this.row149, dos);

				// String

				writeString(this.row150, dos);

				// String

				writeString(this.row151, dos);

				// String

				writeString(this.row152, dos);

				// String

				writeString(this.row153, dos);

				// String

				writeString(this.row154, dos);

				// String

				writeString(this.row155, dos);

				// String

				writeString(this.row156, dos);

				// String

				writeString(this.row157, dos);

				// String

				writeString(this.row158, dos);

				// String

				writeString(this.row159, dos);

				// String

				writeString(this.row160, dos);

				// String

				writeString(this.row161, dos);

				// String

				writeString(this.row162, dos);

				// String

				writeString(this.row163, dos);

				// String

				writeString(this.row164, dos);

				// String

				writeString(this.row165, dos);

				// String

				writeString(this.row166, dos);

				// String

				writeString(this.row167, dos);

				// String

				writeString(this.row168, dos);

				// String

				writeString(this.row169, dos);

				// String

				writeString(this.row170, dos);

				// String

				writeString(this.row171, dos);

				// String

				writeString(this.row172, dos);

				// String

				writeString(this.row173, dos);

				// String

				writeString(this.row174, dos);

				// String

				writeString(this.row175, dos);

				// String

				writeString(this.row176, dos);

				// String

				writeString(this.row177, dos);

				// String

				writeString(this.row178, dos);

				// String

				writeString(this.row179, dos);

				// String

				writeString(this.row180, dos);

				// String

				writeString(this.row181, dos);

				// String

				writeString(this.row182, dos);

				// String

				writeString(this.row183, dos);

				// String

				writeString(this.row184, dos);

				// String

				writeString(this.row185, dos);

				// String

				writeString(this.row186, dos);

				// String

				writeString(this.row187, dos);

				// String

				writeString(this.row188, dos);

				// String

				writeString(this.row189, dos);

				// String

				writeString(this.row190, dos);

				// String

				writeString(this.row191, dos);

				// String

				writeString(this.row192, dos);

				// String

				writeString(this.row193, dos);

				// String

				writeString(this.row194, dos);

				// String

				writeString(this.row195, dos);

				// String

				writeString(this.row196, dos);

				// String

				writeString(this.row197, dos);

				// String

				writeString(this.row198, dos);

				// String

				writeString(this.row199, dos);

				// String

				writeString(this.row200, dos);

				// String

				writeString(this.row201, dos);

				// String

				writeString(this.row202, dos);

				// String

				writeString(this.row203, dos);

				// String

				writeString(this.row204, dos);

				// String

				writeString(this.row205, dos);

				// String

				writeString(this.row206, dos);

				// String

				writeString(this.row207, dos);

				// String

				writeString(this.row208, dos);

				// String

				writeString(this.row209, dos);

				// String

				writeString(this.row210, dos);

				// String

				writeString(this.row211, dos);

				// String

				writeString(this.row212, dos);

				// String

				writeString(this.row213, dos);

				// String

				writeString(this.row214, dos);

				// String

				writeString(this.row215, dos);

				// String

				writeString(this.row216, dos);

				// String

				writeString(this.row217, dos);

				// String

				writeString(this.row218, dos);

				// String

				writeString(this.row219, dos);

				// String

				writeString(this.row220, dos);

				// String

				writeString(this.row221, dos);

				// String

				writeString(this.row222, dos);

				// String

				writeString(this.row223, dos);

				// String

				writeString(this.row224, dos);

				// String

				writeString(this.row225, dos);

				// String

				writeString(this.row226, dos);

				// String

				writeString(this.row227, dos);

				// String

				writeString(this.row228, dos);

				// String

				writeString(this.row229, dos);

				// String

				writeString(this.row230, dos);

				// String

				writeString(this.row231, dos);

				// String

				writeString(this.row232, dos);

				// String

				writeString(this.row233, dos);

				// String

				writeString(this.row234, dos);

				// String

				writeString(this.row235, dos);

				// String

				writeString(this.row236, dos);

				// String

				writeString(this.row237, dos);

				// String

				writeString(this.row238, dos);

				// String

				writeString(this.row239, dos);

				// String

				writeString(this.row240, dos);

				// String

				writeString(this.row241, dos);

				// String

				writeString(this.row242, dos);

				// String

				writeString(this.row243, dos);

				// String

				writeString(this.row244, dos);

				// String

				writeString(this.row245, dos);

				// String

				writeString(this.row246, dos);

				// String

				writeString(this.row247, dos);

				// String

				writeString(this.row248, dos);

				// String

				writeString(this.row249, dos);

				// String

				writeString(this.row250, dos);

				// String

				writeString(this.row251, dos);

				// String

				writeString(this.row252, dos);

				// String

				writeString(this.row253, dos);

				// String

				writeString(this.row254, dos);

				// String

				writeString(this.row255, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("row0=" + row0);
			sb.append(",row1=" + row1);
			sb.append(",row2=" + row2);
			sb.append(",row3=" + row3);
			sb.append(",row4=" + row4);
			sb.append(",row5=" + row5);
			sb.append(",row6=" + row6);
			sb.append(",row7=" + row7);
			sb.append(",row8=" + row8);
			sb.append(",row9=" + row9);
			sb.append(",row10=" + row10);
			sb.append(",row11=" + row11);
			sb.append(",row12=" + row12);
			sb.append(",row13=" + row13);
			sb.append(",row14=" + row14);
			sb.append(",row15=" + row15);
			sb.append(",row16=" + row16);
			sb.append(",row17=" + row17);
			sb.append(",row18=" + row18);
			sb.append(",row19=" + row19);
			sb.append(",row20=" + row20);
			sb.append(",row21=" + row21);
			sb.append(",row22=" + row22);
			sb.append(",row23=" + row23);
			sb.append(",row24=" + row24);
			sb.append(",row25=" + row25);
			sb.append(",row26=" + row26);
			sb.append(",row27=" + row27);
			sb.append(",row28=" + row28);
			sb.append(",row29=" + row29);
			sb.append(",row30=" + row30);
			sb.append(",row31=" + row31);
			sb.append(",row32=" + row32);
			sb.append(",row33=" + row33);
			sb.append(",row34=" + row34);
			sb.append(",row35=" + row35);
			sb.append(",row36=" + row36);
			sb.append(",row37=" + row37);
			sb.append(",row38=" + row38);
			sb.append(",row39=" + row39);
			sb.append(",row40=" + row40);
			sb.append(",row41=" + row41);
			sb.append(",row42=" + row42);
			sb.append(",row43=" + row43);
			sb.append(",row44=" + row44);
			sb.append(",row45=" + row45);
			sb.append(",row46=" + row46);
			sb.append(",row47=" + row47);
			sb.append(",row48=" + row48);
			sb.append(",row49=" + row49);
			sb.append(",row50=" + row50);
			sb.append(",row51=" + row51);
			sb.append(",row52=" + row52);
			sb.append(",row53=" + row53);
			sb.append(",row54=" + row54);
			sb.append(",row55=" + row55);
			sb.append(",row56=" + row56);
			sb.append(",row57=" + row57);
			sb.append(",row58=" + row58);
			sb.append(",row59=" + row59);
			sb.append(",row60=" + row60);
			sb.append(",row61=" + row61);
			sb.append(",row62=" + row62);
			sb.append(",row63=" + row63);
			sb.append(",row64=" + row64);
			sb.append(",row65=" + row65);
			sb.append(",row66=" + row66);
			sb.append(",row67=" + row67);
			sb.append(",row68=" + row68);
			sb.append(",row69=" + row69);
			sb.append(",row70=" + row70);
			sb.append(",row71=" + row71);
			sb.append(",row72=" + row72);
			sb.append(",row73=" + row73);
			sb.append(",row74=" + row74);
			sb.append(",row75=" + row75);
			sb.append(",row76=" + row76);
			sb.append(",row77=" + row77);
			sb.append(",row78=" + row78);
			sb.append(",row79=" + row79);
			sb.append(",row80=" + row80);
			sb.append(",row81=" + row81);
			sb.append(",row82=" + row82);
			sb.append(",row83=" + row83);
			sb.append(",row84=" + row84);
			sb.append(",row85=" + row85);
			sb.append(",row86=" + row86);
			sb.append(",row87=" + row87);
			sb.append(",row88=" + row88);
			sb.append(",row89=" + row89);
			sb.append(",row90=" + row90);
			sb.append(",row91=" + row91);
			sb.append(",row92=" + row92);
			sb.append(",row93=" + row93);
			sb.append(",row94=" + row94);
			sb.append(",row95=" + row95);
			sb.append(",row96=" + row96);
			sb.append(",row97=" + row97);
			sb.append(",row98=" + row98);
			sb.append(",row99=" + row99);
			sb.append(",row100=" + row100);
			sb.append(",row101=" + row101);
			sb.append(",row102=" + row102);
			sb.append(",row103=" + row103);
			sb.append(",row104=" + row104);
			sb.append(",row105=" + row105);
			sb.append(",row106=" + row106);
			sb.append(",row107=" + row107);
			sb.append(",row108=" + row108);
			sb.append(",row109=" + row109);
			sb.append(",row110=" + row110);
			sb.append(",row111=" + row111);
			sb.append(",row112=" + row112);
			sb.append(",row113=" + row113);
			sb.append(",row114=" + row114);
			sb.append(",row115=" + row115);
			sb.append(",row116=" + row116);
			sb.append(",row117=" + row117);
			sb.append(",row118=" + row118);
			sb.append(",row119=" + row119);
			sb.append(",row120=" + row120);
			sb.append(",row121=" + row121);
			sb.append(",row122=" + row122);
			sb.append(",row123=" + row123);
			sb.append(",row124=" + row124);
			sb.append(",row125=" + row125);
			sb.append(",row126=" + row126);
			sb.append(",row127=" + row127);
			sb.append(",row128=" + row128);
			sb.append(",row129=" + row129);
			sb.append(",row130=" + row130);
			sb.append(",row131=" + row131);
			sb.append(",row132=" + row132);
			sb.append(",row133=" + row133);
			sb.append(",row134=" + row134);
			sb.append(",row135=" + row135);
			sb.append(",row136=" + row136);
			sb.append(",row137=" + row137);
			sb.append(",row138=" + row138);
			sb.append(",row139=" + row139);
			sb.append(",row140=" + row140);
			sb.append(",row141=" + row141);
			sb.append(",row142=" + row142);
			sb.append(",row143=" + row143);
			sb.append(",row144=" + row144);
			sb.append(",row145=" + row145);
			sb.append(",row146=" + row146);
			sb.append(",row147=" + row147);
			sb.append(",row148=" + row148);
			sb.append(",row149=" + row149);
			sb.append(",row150=" + row150);
			sb.append(",row151=" + row151);
			sb.append(",row152=" + row152);
			sb.append(",row153=" + row153);
			sb.append(",row154=" + row154);
			sb.append(",row155=" + row155);
			sb.append(",row156=" + row156);
			sb.append(",row157=" + row157);
			sb.append(",row158=" + row158);
			sb.append(",row159=" + row159);
			sb.append(",row160=" + row160);
			sb.append(",row161=" + row161);
			sb.append(",row162=" + row162);
			sb.append(",row163=" + row163);
			sb.append(",row164=" + row164);
			sb.append(",row165=" + row165);
			sb.append(",row166=" + row166);
			sb.append(",row167=" + row167);
			sb.append(",row168=" + row168);
			sb.append(",row169=" + row169);
			sb.append(",row170=" + row170);
			sb.append(",row171=" + row171);
			sb.append(",row172=" + row172);
			sb.append(",row173=" + row173);
			sb.append(",row174=" + row174);
			sb.append(",row175=" + row175);
			sb.append(",row176=" + row176);
			sb.append(",row177=" + row177);
			sb.append(",row178=" + row178);
			sb.append(",row179=" + row179);
			sb.append(",row180=" + row180);
			sb.append(",row181=" + row181);
			sb.append(",row182=" + row182);
			sb.append(",row183=" + row183);
			sb.append(",row184=" + row184);
			sb.append(",row185=" + row185);
			sb.append(",row186=" + row186);
			sb.append(",row187=" + row187);
			sb.append(",row188=" + row188);
			sb.append(",row189=" + row189);
			sb.append(",row190=" + row190);
			sb.append(",row191=" + row191);
			sb.append(",row192=" + row192);
			sb.append(",row193=" + row193);
			sb.append(",row194=" + row194);
			sb.append(",row195=" + row195);
			sb.append(",row196=" + row196);
			sb.append(",row197=" + row197);
			sb.append(",row198=" + row198);
			sb.append(",row199=" + row199);
			sb.append(",row200=" + row200);
			sb.append(",row201=" + row201);
			sb.append(",row202=" + row202);
			sb.append(",row203=" + row203);
			sb.append(",row204=" + row204);
			sb.append(",row205=" + row205);
			sb.append(",row206=" + row206);
			sb.append(",row207=" + row207);
			sb.append(",row208=" + row208);
			sb.append(",row209=" + row209);
			sb.append(",row210=" + row210);
			sb.append(",row211=" + row211);
			sb.append(",row212=" + row212);
			sb.append(",row213=" + row213);
			sb.append(",row214=" + row214);
			sb.append(",row215=" + row215);
			sb.append(",row216=" + row216);
			sb.append(",row217=" + row217);
			sb.append(",row218=" + row218);
			sb.append(",row219=" + row219);
			sb.append(",row220=" + row220);
			sb.append(",row221=" + row221);
			sb.append(",row222=" + row222);
			sb.append(",row223=" + row223);
			sb.append(",row224=" + row224);
			sb.append(",row225=" + row225);
			sb.append(",row226=" + row226);
			sb.append(",row227=" + row227);
			sb.append(",row228=" + row228);
			sb.append(",row229=" + row229);
			sb.append(",row230=" + row230);
			sb.append(",row231=" + row231);
			sb.append(",row232=" + row232);
			sb.append(",row233=" + row233);
			sb.append(",row234=" + row234);
			sb.append(",row235=" + row235);
			sb.append(",row236=" + row236);
			sb.append(",row237=" + row237);
			sb.append(",row238=" + row238);
			sb.append(",row239=" + row239);
			sb.append(",row240=" + row240);
			sb.append(",row241=" + row241);
			sb.append(",row242=" + row242);
			sb.append(",row243=" + row243);
			sb.append(",row244=" + row244);
			sb.append(",row245=" + row245);
			sb.append(",row246=" + row246);
			sb.append(",row247=" + row247);
			sb.append(",row248=" + row248);
			sb.append(",row249=" + row249);
			sb.append(",row250=" + row250);
			sb.append(",row251=" + row251);
			sb.append(",row252=" + row252);
			sb.append(",row253=" + row253);
			sb.append(",row254=" + row254);
			sb.append(",row255=" + row255);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(RowStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimitedProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				RowStruct Row = new RowStruct();

				/**
				 * [tFileOutputDelimited begin ] start
				 */

				ok_Hash.put("tFileOutputDelimited", false);
				start_Hash.put("tFileOutputDelimited", System.currentTimeMillis());

				currentComponent = "tFileOutputDelimited";

				int tos_count_tFileOutputDelimited = 0;

				String fileName_tFileOutputDelimited = "";
				class FileOutputDelimitedUtil_tFileOutputDelimited {
					public void putValue_0(final RowStruct Row, String[] rowtFileOutputDelimited) {
						rowtFileOutputDelimited[0] = Row.row0 == null ? null : Row.row0;
						rowtFileOutputDelimited[1] = Row.row1 == null ? null : Row.row1;
						rowtFileOutputDelimited[2] = Row.row2 == null ? null : Row.row2;
						rowtFileOutputDelimited[3] = Row.row3 == null ? null : Row.row3;
						rowtFileOutputDelimited[4] = Row.row4 == null ? null : Row.row4;
						rowtFileOutputDelimited[5] = Row.row5 == null ? null : Row.row5;
						rowtFileOutputDelimited[6] = Row.row6 == null ? null : Row.row6;
						rowtFileOutputDelimited[7] = Row.row7 == null ? null : Row.row7;
						rowtFileOutputDelimited[8] = Row.row8 == null ? null : Row.row8;
						rowtFileOutputDelimited[9] = Row.row9 == null ? null : Row.row9;
						rowtFileOutputDelimited[10] = Row.row10 == null ? null : Row.row10;
						rowtFileOutputDelimited[11] = Row.row11 == null ? null : Row.row11;
						rowtFileOutputDelimited[12] = Row.row12 == null ? null : Row.row12;
						rowtFileOutputDelimited[13] = Row.row13 == null ? null : Row.row13;
						rowtFileOutputDelimited[14] = Row.row14 == null ? null : Row.row14;
						rowtFileOutputDelimited[15] = Row.row15 == null ? null : Row.row15;
						rowtFileOutputDelimited[16] = Row.row16 == null ? null : Row.row16;
						rowtFileOutputDelimited[17] = Row.row17 == null ? null : Row.row17;
						rowtFileOutputDelimited[18] = Row.row18 == null ? null : Row.row18;
						rowtFileOutputDelimited[19] = Row.row19 == null ? null : Row.row19;
						rowtFileOutputDelimited[20] = Row.row20 == null ? null : Row.row20;
						rowtFileOutputDelimited[21] = Row.row21 == null ? null : Row.row21;
						rowtFileOutputDelimited[22] = Row.row22 == null ? null : Row.row22;
						rowtFileOutputDelimited[23] = Row.row23 == null ? null : Row.row23;
						rowtFileOutputDelimited[24] = Row.row24 == null ? null : Row.row24;
						rowtFileOutputDelimited[25] = Row.row25 == null ? null : Row.row25;
						rowtFileOutputDelimited[26] = Row.row26 == null ? null : Row.row26;
						rowtFileOutputDelimited[27] = Row.row27 == null ? null : Row.row27;
						rowtFileOutputDelimited[28] = Row.row28 == null ? null : Row.row28;
						rowtFileOutputDelimited[29] = Row.row29 == null ? null : Row.row29;
						rowtFileOutputDelimited[30] = Row.row30 == null ? null : Row.row30;
						rowtFileOutputDelimited[31] = Row.row31 == null ? null : Row.row31;
						rowtFileOutputDelimited[32] = Row.row32 == null ? null : Row.row32;
						rowtFileOutputDelimited[33] = Row.row33 == null ? null : Row.row33;
						rowtFileOutputDelimited[34] = Row.row34 == null ? null : Row.row34;
						rowtFileOutputDelimited[35] = Row.row35 == null ? null : Row.row35;
						rowtFileOutputDelimited[36] = Row.row36 == null ? null : Row.row36;
						rowtFileOutputDelimited[37] = Row.row37 == null ? null : Row.row37;
						rowtFileOutputDelimited[38] = Row.row38 == null ? null : Row.row38;
						rowtFileOutputDelimited[39] = Row.row39 == null ? null : Row.row39;
						rowtFileOutputDelimited[40] = Row.row40 == null ? null : Row.row40;
						rowtFileOutputDelimited[41] = Row.row41 == null ? null : Row.row41;
						rowtFileOutputDelimited[42] = Row.row42 == null ? null : Row.row42;
						rowtFileOutputDelimited[43] = Row.row43 == null ? null : Row.row43;
						rowtFileOutputDelimited[44] = Row.row44 == null ? null : Row.row44;
						rowtFileOutputDelimited[45] = Row.row45 == null ? null : Row.row45;
						rowtFileOutputDelimited[46] = Row.row46 == null ? null : Row.row46;
						rowtFileOutputDelimited[47] = Row.row47 == null ? null : Row.row47;
						rowtFileOutputDelimited[48] = Row.row48 == null ? null : Row.row48;
						rowtFileOutputDelimited[49] = Row.row49 == null ? null : Row.row49;
						rowtFileOutputDelimited[50] = Row.row50 == null ? null : Row.row50;
						rowtFileOutputDelimited[51] = Row.row51 == null ? null : Row.row51;
						rowtFileOutputDelimited[52] = Row.row52 == null ? null : Row.row52;
						rowtFileOutputDelimited[53] = Row.row53 == null ? null : Row.row53;
						rowtFileOutputDelimited[54] = Row.row54 == null ? null : Row.row54;
						rowtFileOutputDelimited[55] = Row.row55 == null ? null : Row.row55;
						rowtFileOutputDelimited[56] = Row.row56 == null ? null : Row.row56;
						rowtFileOutputDelimited[57] = Row.row57 == null ? null : Row.row57;
						rowtFileOutputDelimited[58] = Row.row58 == null ? null : Row.row58;
						rowtFileOutputDelimited[59] = Row.row59 == null ? null : Row.row59;
						rowtFileOutputDelimited[60] = Row.row60 == null ? null : Row.row60;
						rowtFileOutputDelimited[61] = Row.row61 == null ? null : Row.row61;
						rowtFileOutputDelimited[62] = Row.row62 == null ? null : Row.row62;
						rowtFileOutputDelimited[63] = Row.row63 == null ? null : Row.row63;
						rowtFileOutputDelimited[64] = Row.row64 == null ? null : Row.row64;
						rowtFileOutputDelimited[65] = Row.row65 == null ? null : Row.row65;
						rowtFileOutputDelimited[66] = Row.row66 == null ? null : Row.row66;
						rowtFileOutputDelimited[67] = Row.row67 == null ? null : Row.row67;
						rowtFileOutputDelimited[68] = Row.row68 == null ? null : Row.row68;
						rowtFileOutputDelimited[69] = Row.row69 == null ? null : Row.row69;
						rowtFileOutputDelimited[70] = Row.row70 == null ? null : Row.row70;
						rowtFileOutputDelimited[71] = Row.row71 == null ? null : Row.row71;
						rowtFileOutputDelimited[72] = Row.row72 == null ? null : Row.row72;
						rowtFileOutputDelimited[73] = Row.row73 == null ? null : Row.row73;
						rowtFileOutputDelimited[74] = Row.row74 == null ? null : Row.row74;
						rowtFileOutputDelimited[75] = Row.row75 == null ? null : Row.row75;
						rowtFileOutputDelimited[76] = Row.row76 == null ? null : Row.row76;
						rowtFileOutputDelimited[77] = Row.row77 == null ? null : Row.row77;
						rowtFileOutputDelimited[78] = Row.row78 == null ? null : Row.row78;
						rowtFileOutputDelimited[79] = Row.row79 == null ? null : Row.row79;
						rowtFileOutputDelimited[80] = Row.row80 == null ? null : Row.row80;
						rowtFileOutputDelimited[81] = Row.row81 == null ? null : Row.row81;
						rowtFileOutputDelimited[82] = Row.row82 == null ? null : Row.row82;
						rowtFileOutputDelimited[83] = Row.row83 == null ? null : Row.row83;
						rowtFileOutputDelimited[84] = Row.row84 == null ? null : Row.row84;
						rowtFileOutputDelimited[85] = Row.row85 == null ? null : Row.row85;
						rowtFileOutputDelimited[86] = Row.row86 == null ? null : Row.row86;
						rowtFileOutputDelimited[87] = Row.row87 == null ? null : Row.row87;
						rowtFileOutputDelimited[88] = Row.row88 == null ? null : Row.row88;
						rowtFileOutputDelimited[89] = Row.row89 == null ? null : Row.row89;
					}

					public void putValue_1(final RowStruct Row, String[] rowtFileOutputDelimited) {
						rowtFileOutputDelimited[90] = Row.row90 == null ? null : Row.row90;
						rowtFileOutputDelimited[91] = Row.row91 == null ? null : Row.row91;
						rowtFileOutputDelimited[92] = Row.row92 == null ? null : Row.row92;
						rowtFileOutputDelimited[93] = Row.row93 == null ? null : Row.row93;
						rowtFileOutputDelimited[94] = Row.row94 == null ? null : Row.row94;
						rowtFileOutputDelimited[95] = Row.row95 == null ? null : Row.row95;
						rowtFileOutputDelimited[96] = Row.row96 == null ? null : Row.row96;
						rowtFileOutputDelimited[97] = Row.row97 == null ? null : Row.row97;
						rowtFileOutputDelimited[98] = Row.row98 == null ? null : Row.row98;
						rowtFileOutputDelimited[99] = Row.row99 == null ? null : Row.row99;
						rowtFileOutputDelimited[100] = Row.row100 == null ? null : Row.row100;
						rowtFileOutputDelimited[101] = Row.row101 == null ? null : Row.row101;
						rowtFileOutputDelimited[102] = Row.row102 == null ? null : Row.row102;
						rowtFileOutputDelimited[103] = Row.row103 == null ? null : Row.row103;
						rowtFileOutputDelimited[104] = Row.row104 == null ? null : Row.row104;
						rowtFileOutputDelimited[105] = Row.row105 == null ? null : Row.row105;
						rowtFileOutputDelimited[106] = Row.row106 == null ? null : Row.row106;
						rowtFileOutputDelimited[107] = Row.row107 == null ? null : Row.row107;
						rowtFileOutputDelimited[108] = Row.row108 == null ? null : Row.row108;
						rowtFileOutputDelimited[109] = Row.row109 == null ? null : Row.row109;
						rowtFileOutputDelimited[110] = Row.row110 == null ? null : Row.row110;
						rowtFileOutputDelimited[111] = Row.row111 == null ? null : Row.row111;
						rowtFileOutputDelimited[112] = Row.row112 == null ? null : Row.row112;
						rowtFileOutputDelimited[113] = Row.row113 == null ? null : Row.row113;
						rowtFileOutputDelimited[114] = Row.row114 == null ? null : Row.row114;
						rowtFileOutputDelimited[115] = Row.row115 == null ? null : Row.row115;
						rowtFileOutputDelimited[116] = Row.row116 == null ? null : Row.row116;
						rowtFileOutputDelimited[117] = Row.row117 == null ? null : Row.row117;
						rowtFileOutputDelimited[118] = Row.row118 == null ? null : Row.row118;
						rowtFileOutputDelimited[119] = Row.row119 == null ? null : Row.row119;
						rowtFileOutputDelimited[120] = Row.row120 == null ? null : Row.row120;
						rowtFileOutputDelimited[121] = Row.row121 == null ? null : Row.row121;
						rowtFileOutputDelimited[122] = Row.row122 == null ? null : Row.row122;
						rowtFileOutputDelimited[123] = Row.row123 == null ? null : Row.row123;
						rowtFileOutputDelimited[124] = Row.row124 == null ? null : Row.row124;
						rowtFileOutputDelimited[125] = Row.row125 == null ? null : Row.row125;
						rowtFileOutputDelimited[126] = Row.row126 == null ? null : Row.row126;
						rowtFileOutputDelimited[127] = Row.row127 == null ? null : Row.row127;
						rowtFileOutputDelimited[128] = Row.row128 == null ? null : Row.row128;
						rowtFileOutputDelimited[129] = Row.row129 == null ? null : Row.row129;
						rowtFileOutputDelimited[130] = Row.row130 == null ? null : Row.row130;
						rowtFileOutputDelimited[131] = Row.row131 == null ? null : Row.row131;
						rowtFileOutputDelimited[132] = Row.row132 == null ? null : Row.row132;
						rowtFileOutputDelimited[133] = Row.row133 == null ? null : Row.row133;
						rowtFileOutputDelimited[134] = Row.row134 == null ? null : Row.row134;
						rowtFileOutputDelimited[135] = Row.row135 == null ? null : Row.row135;
						rowtFileOutputDelimited[136] = Row.row136 == null ? null : Row.row136;
						rowtFileOutputDelimited[137] = Row.row137 == null ? null : Row.row137;
						rowtFileOutputDelimited[138] = Row.row138 == null ? null : Row.row138;
						rowtFileOutputDelimited[139] = Row.row139 == null ? null : Row.row139;
						rowtFileOutputDelimited[140] = Row.row140 == null ? null : Row.row140;
						rowtFileOutputDelimited[141] = Row.row141 == null ? null : Row.row141;
						rowtFileOutputDelimited[142] = Row.row142 == null ? null : Row.row142;
						rowtFileOutputDelimited[143] = Row.row143 == null ? null : Row.row143;
						rowtFileOutputDelimited[144] = Row.row144 == null ? null : Row.row144;
						rowtFileOutputDelimited[145] = Row.row145 == null ? null : Row.row145;
						rowtFileOutputDelimited[146] = Row.row146 == null ? null : Row.row146;
						rowtFileOutputDelimited[147] = Row.row147 == null ? null : Row.row147;
						rowtFileOutputDelimited[148] = Row.row148 == null ? null : Row.row148;
						rowtFileOutputDelimited[149] = Row.row149 == null ? null : Row.row149;
						rowtFileOutputDelimited[150] = Row.row150 == null ? null : Row.row150;
						rowtFileOutputDelimited[151] = Row.row151 == null ? null : Row.row151;
						rowtFileOutputDelimited[152] = Row.row152 == null ? null : Row.row152;
						rowtFileOutputDelimited[153] = Row.row153 == null ? null : Row.row153;
						rowtFileOutputDelimited[154] = Row.row154 == null ? null : Row.row154;
						rowtFileOutputDelimited[155] = Row.row155 == null ? null : Row.row155;
						rowtFileOutputDelimited[156] = Row.row156 == null ? null : Row.row156;
						rowtFileOutputDelimited[157] = Row.row157 == null ? null : Row.row157;
						rowtFileOutputDelimited[158] = Row.row158 == null ? null : Row.row158;
						rowtFileOutputDelimited[159] = Row.row159 == null ? null : Row.row159;
						rowtFileOutputDelimited[160] = Row.row160 == null ? null : Row.row160;
						rowtFileOutputDelimited[161] = Row.row161 == null ? null : Row.row161;
						rowtFileOutputDelimited[162] = Row.row162 == null ? null : Row.row162;
						rowtFileOutputDelimited[163] = Row.row163 == null ? null : Row.row163;
						rowtFileOutputDelimited[164] = Row.row164 == null ? null : Row.row164;
						rowtFileOutputDelimited[165] = Row.row165 == null ? null : Row.row165;
						rowtFileOutputDelimited[166] = Row.row166 == null ? null : Row.row166;
						rowtFileOutputDelimited[167] = Row.row167 == null ? null : Row.row167;
						rowtFileOutputDelimited[168] = Row.row168 == null ? null : Row.row168;
						rowtFileOutputDelimited[169] = Row.row169 == null ? null : Row.row169;
						rowtFileOutputDelimited[170] = Row.row170 == null ? null : Row.row170;
						rowtFileOutputDelimited[171] = Row.row171 == null ? null : Row.row171;
						rowtFileOutputDelimited[172] = Row.row172 == null ? null : Row.row172;
						rowtFileOutputDelimited[173] = Row.row173 == null ? null : Row.row173;
						rowtFileOutputDelimited[174] = Row.row174 == null ? null : Row.row174;
						rowtFileOutputDelimited[175] = Row.row175 == null ? null : Row.row175;
						rowtFileOutputDelimited[176] = Row.row176 == null ? null : Row.row176;
						rowtFileOutputDelimited[177] = Row.row177 == null ? null : Row.row177;
						rowtFileOutputDelimited[178] = Row.row178 == null ? null : Row.row178;
						rowtFileOutputDelimited[179] = Row.row179 == null ? null : Row.row179;
					}

					public void putValue_2(final RowStruct Row, String[] rowtFileOutputDelimited) {
						rowtFileOutputDelimited[180] = Row.row180 == null ? null : Row.row180;
						rowtFileOutputDelimited[181] = Row.row181 == null ? null : Row.row181;
						rowtFileOutputDelimited[182] = Row.row182 == null ? null : Row.row182;
						rowtFileOutputDelimited[183] = Row.row183 == null ? null : Row.row183;
						rowtFileOutputDelimited[184] = Row.row184 == null ? null : Row.row184;
						rowtFileOutputDelimited[185] = Row.row185 == null ? null : Row.row185;
						rowtFileOutputDelimited[186] = Row.row186 == null ? null : Row.row186;
						rowtFileOutputDelimited[187] = Row.row187 == null ? null : Row.row187;
						rowtFileOutputDelimited[188] = Row.row188 == null ? null : Row.row188;
						rowtFileOutputDelimited[189] = Row.row189 == null ? null : Row.row189;
						rowtFileOutputDelimited[190] = Row.row190 == null ? null : Row.row190;
						rowtFileOutputDelimited[191] = Row.row191 == null ? null : Row.row191;
						rowtFileOutputDelimited[192] = Row.row192 == null ? null : Row.row192;
						rowtFileOutputDelimited[193] = Row.row193 == null ? null : Row.row193;
						rowtFileOutputDelimited[194] = Row.row194 == null ? null : Row.row194;
						rowtFileOutputDelimited[195] = Row.row195 == null ? null : Row.row195;
						rowtFileOutputDelimited[196] = Row.row196 == null ? null : Row.row196;
						rowtFileOutputDelimited[197] = Row.row197 == null ? null : Row.row197;
						rowtFileOutputDelimited[198] = Row.row198 == null ? null : Row.row198;
						rowtFileOutputDelimited[199] = Row.row199 == null ? null : Row.row199;
						rowtFileOutputDelimited[200] = Row.row200 == null ? null : Row.row200;
						rowtFileOutputDelimited[201] = Row.row201 == null ? null : Row.row201;
						rowtFileOutputDelimited[202] = Row.row202 == null ? null : Row.row202;
						rowtFileOutputDelimited[203] = Row.row203 == null ? null : Row.row203;
						rowtFileOutputDelimited[204] = Row.row204 == null ? null : Row.row204;
						rowtFileOutputDelimited[205] = Row.row205 == null ? null : Row.row205;
						rowtFileOutputDelimited[206] = Row.row206 == null ? null : Row.row206;
						rowtFileOutputDelimited[207] = Row.row207 == null ? null : Row.row207;
						rowtFileOutputDelimited[208] = Row.row208 == null ? null : Row.row208;
						rowtFileOutputDelimited[209] = Row.row209 == null ? null : Row.row209;
						rowtFileOutputDelimited[210] = Row.row210 == null ? null : Row.row210;
						rowtFileOutputDelimited[211] = Row.row211 == null ? null : Row.row211;
						rowtFileOutputDelimited[212] = Row.row212 == null ? null : Row.row212;
						rowtFileOutputDelimited[213] = Row.row213 == null ? null : Row.row213;
						rowtFileOutputDelimited[214] = Row.row214 == null ? null : Row.row214;
						rowtFileOutputDelimited[215] = Row.row215 == null ? null : Row.row215;
						rowtFileOutputDelimited[216] = Row.row216 == null ? null : Row.row216;
						rowtFileOutputDelimited[217] = Row.row217 == null ? null : Row.row217;
						rowtFileOutputDelimited[218] = Row.row218 == null ? null : Row.row218;
						rowtFileOutputDelimited[219] = Row.row219 == null ? null : Row.row219;
						rowtFileOutputDelimited[220] = Row.row220 == null ? null : Row.row220;
						rowtFileOutputDelimited[221] = Row.row221 == null ? null : Row.row221;
						rowtFileOutputDelimited[222] = Row.row222 == null ? null : Row.row222;
						rowtFileOutputDelimited[223] = Row.row223 == null ? null : Row.row223;
						rowtFileOutputDelimited[224] = Row.row224 == null ? null : Row.row224;
						rowtFileOutputDelimited[225] = Row.row225 == null ? null : Row.row225;
						rowtFileOutputDelimited[226] = Row.row226 == null ? null : Row.row226;
						rowtFileOutputDelimited[227] = Row.row227 == null ? null : Row.row227;
						rowtFileOutputDelimited[228] = Row.row228 == null ? null : Row.row228;
						rowtFileOutputDelimited[229] = Row.row229 == null ? null : Row.row229;
						rowtFileOutputDelimited[230] = Row.row230 == null ? null : Row.row230;
						rowtFileOutputDelimited[231] = Row.row231 == null ? null : Row.row231;
						rowtFileOutputDelimited[232] = Row.row232 == null ? null : Row.row232;
						rowtFileOutputDelimited[233] = Row.row233 == null ? null : Row.row233;
						rowtFileOutputDelimited[234] = Row.row234 == null ? null : Row.row234;
						rowtFileOutputDelimited[235] = Row.row235 == null ? null : Row.row235;
						rowtFileOutputDelimited[236] = Row.row236 == null ? null : Row.row236;
						rowtFileOutputDelimited[237] = Row.row237 == null ? null : Row.row237;
						rowtFileOutputDelimited[238] = Row.row238 == null ? null : Row.row238;
						rowtFileOutputDelimited[239] = Row.row239 == null ? null : Row.row239;
						rowtFileOutputDelimited[240] = Row.row240 == null ? null : Row.row240;
						rowtFileOutputDelimited[241] = Row.row241 == null ? null : Row.row241;
						rowtFileOutputDelimited[242] = Row.row242 == null ? null : Row.row242;
						rowtFileOutputDelimited[243] = Row.row243 == null ? null : Row.row243;
						rowtFileOutputDelimited[244] = Row.row244 == null ? null : Row.row244;
						rowtFileOutputDelimited[245] = Row.row245 == null ? null : Row.row245;
						rowtFileOutputDelimited[246] = Row.row246 == null ? null : Row.row246;
						rowtFileOutputDelimited[247] = Row.row247 == null ? null : Row.row247;
						rowtFileOutputDelimited[248] = Row.row248 == null ? null : Row.row248;
						rowtFileOutputDelimited[249] = Row.row249 == null ? null : Row.row249;
						rowtFileOutputDelimited[250] = Row.row250 == null ? null : Row.row250;
						rowtFileOutputDelimited[251] = Row.row251 == null ? null : Row.row251;
						rowtFileOutputDelimited[252] = Row.row252 == null ? null : Row.row252;
						rowtFileOutputDelimited[253] = Row.row253 == null ? null : Row.row253;
						rowtFileOutputDelimited[254] = Row.row254 == null ? null : Row.row254;
						rowtFileOutputDelimited[255] = Row.row255 == null ? null : Row.row255;
					}
				}
				FileOutputDelimitedUtil_tFileOutputDelimited fileOutputDelimitedUtil_tFileOutputDelimited = new FileOutputDelimitedUtil_tFileOutputDelimited();
				fileName_tFileOutputDelimited = (new java.io.File(
						"/Applications/TOSDI-7.2.1/studio/workspace/VINCERE_ETL/temp/preview/dbconnection_params.csv"))
								.getAbsolutePath().replace("\\", "/");
				String fullName_tFileOutputDelimited = null;
				String extension_tFileOutputDelimited = null;
				String directory_tFileOutputDelimited = null;
				if ((fileName_tFileOutputDelimited.indexOf("/") != -1)) {
					if (fileName_tFileOutputDelimited.lastIndexOf(".") < fileName_tFileOutputDelimited
							.lastIndexOf("/")) {
						fullName_tFileOutputDelimited = fileName_tFileOutputDelimited;
						extension_tFileOutputDelimited = "";
					} else {
						fullName_tFileOutputDelimited = fileName_tFileOutputDelimited.substring(0,
								fileName_tFileOutputDelimited.lastIndexOf("."));
						extension_tFileOutputDelimited = fileName_tFileOutputDelimited
								.substring(fileName_tFileOutputDelimited.lastIndexOf("."));
					}
					directory_tFileOutputDelimited = fileName_tFileOutputDelimited.substring(0,
							fileName_tFileOutputDelimited.lastIndexOf("/"));
				} else {
					if (fileName_tFileOutputDelimited.lastIndexOf(".") != -1) {
						fullName_tFileOutputDelimited = fileName_tFileOutputDelimited.substring(0,
								fileName_tFileOutputDelimited.lastIndexOf("."));
						extension_tFileOutputDelimited = fileName_tFileOutputDelimited
								.substring(fileName_tFileOutputDelimited.lastIndexOf("."));
					} else {
						fullName_tFileOutputDelimited = fileName_tFileOutputDelimited;
						extension_tFileOutputDelimited = "";
					}
					directory_tFileOutputDelimited = "";
				}
				boolean isFileGenerated_tFileOutputDelimited = true;
				java.io.File filetFileOutputDelimited = new java.io.File(fileName_tFileOutputDelimited);
				globalMap.put("tFileOutputDelimited_FILE_NAME", fileName_tFileOutputDelimited);
				String[] headColutFileOutputDelimited = new String[256];
				class CSVBasicSet_tFileOutputDelimited {
					private char field_Delim;
					private char row_Delim;
					private char escape;
					private char textEnclosure;
					private boolean useCRLFRecordDelimiter;

					public boolean isUseCRLFRecordDelimiter() {
						return useCRLFRecordDelimiter;
					}

					public void setFieldSeparator(String fieldSep) throws IllegalArgumentException {
						char field_Delim_tFileOutputDelimited[] = null;

						// support passing value (property: Field Separator) by 'context.fs' or
						// 'globalMap.get("fs")'.
						if (fieldSep.length() > 0) {
							field_Delim_tFileOutputDelimited = fieldSep.toCharArray();
						} else {
							throw new IllegalArgumentException("Field Separator must be assigned a char.");
						}
						this.field_Delim = field_Delim_tFileOutputDelimited[0];
					}

					public char getFieldDelim() {
						if (this.field_Delim == 0) {
							setFieldSeparator(";");
						}
						return this.field_Delim;
					}

					public void setRowSeparator(String rowSep) {
						if ("\r\n".equals(rowSep)) {
							useCRLFRecordDelimiter = true;
							return;
						}
						char row_DelimtFileOutputDelimited[] = null;

						// support passing value (property: Row Separator) by 'context.rs' or
						// 'globalMap.get("rs")'.
						if (rowSep.length() > 0) {
							row_DelimtFileOutputDelimited = rowSep.toCharArray();
						} else {
							throw new IllegalArgumentException("Row Separator must be assigned a char.");
						}
						this.row_Delim = row_DelimtFileOutputDelimited[0];
					}

					public char getRowDelim() {
						if (this.row_Delim == 0) {
							setRowSeparator("\n");
						}
						return this.row_Delim;
					}

					public void setEscapeAndTextEnclosure(String strEscape, String strTextEnclosure)
							throws IllegalArgumentException {
						if (strEscape.length() <= 0) {
							throw new IllegalArgumentException("Escape Char must be assigned a char.");
						}

						if ("".equals(strTextEnclosure))
							strTextEnclosure = "\0";
						char textEnclosure_tFileOutputDelimited[] = null;

						if (strTextEnclosure.length() > 0) {
							textEnclosure_tFileOutputDelimited = strTextEnclosure.toCharArray();
						} else {
							throw new IllegalArgumentException("Text Enclosure must be assigned a char.");
						}

						this.textEnclosure = textEnclosure_tFileOutputDelimited[0];

						if (("\\").equals(strEscape)) {
							this.escape = '\\';
						} else if (strEscape.equals(strTextEnclosure)) {
							this.escape = this.textEnclosure;
						} else {
							// the default escape mode is double escape
							this.escape = this.textEnclosure;
						}

					}

					public char getEscapeChar() {
						return (char) this.escape;
					}

					public char getTextEnclosure() {
						return this.textEnclosure;
					}
				}

				int nb_line_tFileOutputDelimited = 0;
				int splitedFileNo_tFileOutputDelimited = 0;
				int currentRow_tFileOutputDelimited = 0;

				CSVBasicSet_tFileOutputDelimited csvSettings_tFileOutputDelimited = new CSVBasicSet_tFileOutputDelimited();
				csvSettings_tFileOutputDelimited.setFieldSeparator(";");
				csvSettings_tFileOutputDelimited.setRowSeparator("\n");
				csvSettings_tFileOutputDelimited.setEscapeAndTextEnclosure("\\", "\"");
				// create directory only if not exists
				if (directory_tFileOutputDelimited != null && directory_tFileOutputDelimited.trim().length() != 0) {
					java.io.File dir_tFileOutputDelimited = new java.io.File(directory_tFileOutputDelimited);
					if (!dir_tFileOutputDelimited.exists()) {
						dir_tFileOutputDelimited.mkdirs();
					}
				}
				com.talend.csv.CSVWriter CsvWritertFileOutputDelimited = null;

				java.io.File fileToDelete_tFileOutputDelimited = new java.io.File(fileName_tFileOutputDelimited);
				if (fileToDelete_tFileOutputDelimited.exists()) {
					fileToDelete_tFileOutputDelimited.delete();
				}
				CsvWritertFileOutputDelimited = new com.talend.csv.CSVWriter(
						new java.io.BufferedWriter(new java.io.OutputStreamWriter(
								new java.io.FileOutputStream(fileName_tFileOutputDelimited, false), "UTF-8")));
				CsvWritertFileOutputDelimited.setSeparator(csvSettings_tFileOutputDelimited.getFieldDelim());
				if (csvSettings_tFileOutputDelimited.isUseCRLFRecordDelimiter()) {
					CsvWritertFileOutputDelimited.setLineEnd("\r\n");
				} else {
					CsvWritertFileOutputDelimited.setLineEnd("" + csvSettings_tFileOutputDelimited.getRowDelim());
				}
				CsvWritertFileOutputDelimited.setEscapeChar(csvSettings_tFileOutputDelimited.getEscapeChar());
				CsvWritertFileOutputDelimited.setQuoteChar(csvSettings_tFileOutputDelimited.getTextEnclosure());
				CsvWritertFileOutputDelimited.setQuoteStatus(com.talend.csv.CSVWriter.QuoteStatus.FORCE);

				resourceMap.put("CsvWriter_tFileOutputDelimited", CsvWritertFileOutputDelimited);
				resourceMap.put("nb_line_tFileOutputDelimited", nb_line_tFileOutputDelimited);

				/**
				 * [tFileOutputDelimited begin ] stop
				 */

				/**
				 * [tFileInputDelimited begin ] start
				 */

				ok_Hash.put("tFileInputDelimited", false);
				start_Hash.put("tFileInputDelimited", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited";

				int tos_count_tFileInputDelimited = 0;

				final routines.system.RowState rowstate_tFileInputDelimited = new routines.system.RowState();

				class RowHelper_tFileInputDelimited {

					public void valueToConn_0(String[] rowtFileInputDelimited, RowStruct Row)
							throws java.lang.Exception {

						char fieldSeparator_tFileInputDelimited_ListType[] = null;
						// support passing value (property: Field Separator) by 'context.fs' or
						// 'globalMap.get("fs")'.
						if (((String) ";").length() > 0) {
							fieldSeparator_tFileInputDelimited_ListType = ((String) ";").toCharArray();
						} else {
							throw new IllegalArgumentException("Field Separator must be assigned a char.");
						}
						if (rowtFileInputDelimited.length == 1 && ("\015").equals(rowtFileInputDelimited[0])) {// empty
																												// line
																												// when
																												// row
																												// separator
																												// is
																												// '\n'

							Row.row0 = null;

							Row.row1 = null;

							Row.row2 = null;

							Row.row3 = null;

							Row.row4 = null;

							Row.row5 = null;

							Row.row6 = null;

							Row.row7 = null;

							Row.row8 = null;

							Row.row9 = null;

							Row.row10 = null;

							Row.row11 = null;

							Row.row12 = null;

							Row.row13 = null;

							Row.row14 = null;

							Row.row15 = null;

							Row.row16 = null;

							Row.row17 = null;

							Row.row18 = null;

							Row.row19 = null;

							Row.row20 = null;

							Row.row21 = null;

							Row.row22 = null;

							Row.row23 = null;

							Row.row24 = null;

							Row.row25 = null;

							Row.row26 = null;

							Row.row27 = null;

							Row.row28 = null;

							Row.row29 = null;

							Row.row30 = null;

							Row.row31 = null;

							Row.row32 = null;

							Row.row33 = null;

							Row.row34 = null;

							Row.row35 = null;

							Row.row36 = null;

							Row.row37 = null;

							Row.row38 = null;

							Row.row39 = null;

							Row.row40 = null;

							Row.row41 = null;

							Row.row42 = null;

							Row.row43 = null;

							Row.row44 = null;

							Row.row45 = null;

							Row.row46 = null;

							Row.row47 = null;

							Row.row48 = null;

							Row.row49 = null;

							Row.row50 = null;

							Row.row51 = null;

							Row.row52 = null;

							Row.row53 = null;

							Row.row54 = null;

							Row.row55 = null;

							Row.row56 = null;

							Row.row57 = null;

							Row.row58 = null;

							Row.row59 = null;

							Row.row60 = null;

							Row.row61 = null;

							Row.row62 = null;

							Row.row63 = null;

							Row.row64 = null;

							Row.row65 = null;

							Row.row66 = null;

							Row.row67 = null;

							Row.row68 = null;

							Row.row69 = null;

							Row.row70 = null;

							Row.row71 = null;

							Row.row72 = null;

							Row.row73 = null;

							Row.row74 = null;

							Row.row75 = null;

							Row.row76 = null;

							Row.row77 = null;

							Row.row78 = null;

							Row.row79 = null;

							Row.row80 = null;

							Row.row81 = null;

							Row.row82 = null;

							Row.row83 = null;

							Row.row84 = null;

							Row.row85 = null;

							Row.row86 = null;

							Row.row87 = null;

							Row.row88 = null;

							Row.row89 = null;

							Row.row90 = null;

							Row.row91 = null;

							Row.row92 = null;

							Row.row93 = null;

							Row.row94 = null;

							Row.row95 = null;

							Row.row96 = null;

							Row.row97 = null;

							Row.row98 = null;

							Row.row99 = null;

						} else {

							int columnIndexWithD_tFileInputDelimited = 0; // Column Index

							columnIndexWithD_tFileInputDelimited = 0;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row0 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row0 = null;

							}

							columnIndexWithD_tFileInputDelimited = 1;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row1 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row1 = null;

							}

							columnIndexWithD_tFileInputDelimited = 2;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row2 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row2 = null;

							}

							columnIndexWithD_tFileInputDelimited = 3;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row3 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row3 = null;

							}

							columnIndexWithD_tFileInputDelimited = 4;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row4 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row4 = null;

							}

							columnIndexWithD_tFileInputDelimited = 5;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row5 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row5 = null;

							}

							columnIndexWithD_tFileInputDelimited = 6;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row6 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row6 = null;

							}

							columnIndexWithD_tFileInputDelimited = 7;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row7 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row7 = null;

							}

							columnIndexWithD_tFileInputDelimited = 8;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row8 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row8 = null;

							}

							columnIndexWithD_tFileInputDelimited = 9;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row9 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row9 = null;

							}

							columnIndexWithD_tFileInputDelimited = 10;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row10 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row10 = null;

							}

							columnIndexWithD_tFileInputDelimited = 11;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row11 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row11 = null;

							}

							columnIndexWithD_tFileInputDelimited = 12;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row12 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row12 = null;

							}

							columnIndexWithD_tFileInputDelimited = 13;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row13 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row13 = null;

							}

							columnIndexWithD_tFileInputDelimited = 14;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row14 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row14 = null;

							}

							columnIndexWithD_tFileInputDelimited = 15;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row15 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row15 = null;

							}

							columnIndexWithD_tFileInputDelimited = 16;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row16 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row16 = null;

							}

							columnIndexWithD_tFileInputDelimited = 17;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row17 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row17 = null;

							}

							columnIndexWithD_tFileInputDelimited = 18;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row18 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row18 = null;

							}

							columnIndexWithD_tFileInputDelimited = 19;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row19 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row19 = null;

							}

							columnIndexWithD_tFileInputDelimited = 20;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row20 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row20 = null;

							}

							columnIndexWithD_tFileInputDelimited = 21;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row21 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row21 = null;

							}

							columnIndexWithD_tFileInputDelimited = 22;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row22 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row22 = null;

							}

							columnIndexWithD_tFileInputDelimited = 23;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row23 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row23 = null;

							}

							columnIndexWithD_tFileInputDelimited = 24;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row24 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row24 = null;

							}

							columnIndexWithD_tFileInputDelimited = 25;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row25 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row25 = null;

							}

							columnIndexWithD_tFileInputDelimited = 26;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row26 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row26 = null;

							}

							columnIndexWithD_tFileInputDelimited = 27;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row27 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row27 = null;

							}

							columnIndexWithD_tFileInputDelimited = 28;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row28 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row28 = null;

							}

							columnIndexWithD_tFileInputDelimited = 29;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row29 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row29 = null;

							}

							columnIndexWithD_tFileInputDelimited = 30;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row30 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row30 = null;

							}

							columnIndexWithD_tFileInputDelimited = 31;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row31 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row31 = null;

							}

							columnIndexWithD_tFileInputDelimited = 32;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row32 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row32 = null;

							}

							columnIndexWithD_tFileInputDelimited = 33;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row33 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row33 = null;

							}

							columnIndexWithD_tFileInputDelimited = 34;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row34 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row34 = null;

							}

							columnIndexWithD_tFileInputDelimited = 35;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row35 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row35 = null;

							}

							columnIndexWithD_tFileInputDelimited = 36;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row36 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row36 = null;

							}

							columnIndexWithD_tFileInputDelimited = 37;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row37 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row37 = null;

							}

							columnIndexWithD_tFileInputDelimited = 38;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row38 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row38 = null;

							}

							columnIndexWithD_tFileInputDelimited = 39;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row39 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row39 = null;

							}

							columnIndexWithD_tFileInputDelimited = 40;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row40 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row40 = null;

							}

							columnIndexWithD_tFileInputDelimited = 41;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row41 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row41 = null;

							}

							columnIndexWithD_tFileInputDelimited = 42;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row42 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row42 = null;

							}

							columnIndexWithD_tFileInputDelimited = 43;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row43 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row43 = null;

							}

							columnIndexWithD_tFileInputDelimited = 44;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row44 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row44 = null;

							}

							columnIndexWithD_tFileInputDelimited = 45;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row45 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row45 = null;

							}

							columnIndexWithD_tFileInputDelimited = 46;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row46 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row46 = null;

							}

							columnIndexWithD_tFileInputDelimited = 47;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row47 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row47 = null;

							}

							columnIndexWithD_tFileInputDelimited = 48;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row48 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row48 = null;

							}

							columnIndexWithD_tFileInputDelimited = 49;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row49 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row49 = null;

							}

							columnIndexWithD_tFileInputDelimited = 50;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row50 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row50 = null;

							}

							columnIndexWithD_tFileInputDelimited = 51;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row51 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row51 = null;

							}

							columnIndexWithD_tFileInputDelimited = 52;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row52 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row52 = null;

							}

							columnIndexWithD_tFileInputDelimited = 53;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row53 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row53 = null;

							}

							columnIndexWithD_tFileInputDelimited = 54;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row54 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row54 = null;

							}

							columnIndexWithD_tFileInputDelimited = 55;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row55 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row55 = null;

							}

							columnIndexWithD_tFileInputDelimited = 56;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row56 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row56 = null;

							}

							columnIndexWithD_tFileInputDelimited = 57;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row57 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row57 = null;

							}

							columnIndexWithD_tFileInputDelimited = 58;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row58 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row58 = null;

							}

							columnIndexWithD_tFileInputDelimited = 59;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row59 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row59 = null;

							}

							columnIndexWithD_tFileInputDelimited = 60;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row60 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row60 = null;

							}

							columnIndexWithD_tFileInputDelimited = 61;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row61 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row61 = null;

							}

							columnIndexWithD_tFileInputDelimited = 62;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row62 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row62 = null;

							}

							columnIndexWithD_tFileInputDelimited = 63;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row63 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row63 = null;

							}

							columnIndexWithD_tFileInputDelimited = 64;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row64 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row64 = null;

							}

							columnIndexWithD_tFileInputDelimited = 65;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row65 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row65 = null;

							}

							columnIndexWithD_tFileInputDelimited = 66;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row66 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row66 = null;

							}

							columnIndexWithD_tFileInputDelimited = 67;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row67 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row67 = null;

							}

							columnIndexWithD_tFileInputDelimited = 68;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row68 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row68 = null;

							}

							columnIndexWithD_tFileInputDelimited = 69;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row69 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row69 = null;

							}

							columnIndexWithD_tFileInputDelimited = 70;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row70 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row70 = null;

							}

							columnIndexWithD_tFileInputDelimited = 71;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row71 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row71 = null;

							}

							columnIndexWithD_tFileInputDelimited = 72;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row72 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row72 = null;

							}

							columnIndexWithD_tFileInputDelimited = 73;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row73 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row73 = null;

							}

							columnIndexWithD_tFileInputDelimited = 74;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row74 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row74 = null;

							}

							columnIndexWithD_tFileInputDelimited = 75;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row75 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row75 = null;

							}

							columnIndexWithD_tFileInputDelimited = 76;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row76 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row76 = null;

							}

							columnIndexWithD_tFileInputDelimited = 77;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row77 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row77 = null;

							}

							columnIndexWithD_tFileInputDelimited = 78;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row78 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row78 = null;

							}

							columnIndexWithD_tFileInputDelimited = 79;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row79 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row79 = null;

							}

							columnIndexWithD_tFileInputDelimited = 80;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row80 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row80 = null;

							}

							columnIndexWithD_tFileInputDelimited = 81;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row81 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row81 = null;

							}

							columnIndexWithD_tFileInputDelimited = 82;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row82 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row82 = null;

							}

							columnIndexWithD_tFileInputDelimited = 83;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row83 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row83 = null;

							}

							columnIndexWithD_tFileInputDelimited = 84;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row84 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row84 = null;

							}

							columnIndexWithD_tFileInputDelimited = 85;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row85 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row85 = null;

							}

							columnIndexWithD_tFileInputDelimited = 86;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row86 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row86 = null;

							}

							columnIndexWithD_tFileInputDelimited = 87;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row87 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row87 = null;

							}

							columnIndexWithD_tFileInputDelimited = 88;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row88 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row88 = null;

							}

							columnIndexWithD_tFileInputDelimited = 89;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row89 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row89 = null;

							}

							columnIndexWithD_tFileInputDelimited = 90;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row90 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row90 = null;

							}

							columnIndexWithD_tFileInputDelimited = 91;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row91 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row91 = null;

							}

							columnIndexWithD_tFileInputDelimited = 92;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row92 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row92 = null;

							}

							columnIndexWithD_tFileInputDelimited = 93;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row93 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row93 = null;

							}

							columnIndexWithD_tFileInputDelimited = 94;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row94 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row94 = null;

							}

							columnIndexWithD_tFileInputDelimited = 95;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row95 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row95 = null;

							}

							columnIndexWithD_tFileInputDelimited = 96;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row96 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row96 = null;

							}

							columnIndexWithD_tFileInputDelimited = 97;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row97 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row97 = null;

							}

							columnIndexWithD_tFileInputDelimited = 98;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row98 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row98 = null;

							}

							columnIndexWithD_tFileInputDelimited = 99;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row99 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row99 = null;

							}

						}

					}

					public void valueToConn_1(String[] rowtFileInputDelimited, RowStruct Row)
							throws java.lang.Exception {

						char fieldSeparator_tFileInputDelimited_ListType[] = null;
						// support passing value (property: Field Separator) by 'context.fs' or
						// 'globalMap.get("fs")'.
						if (((String) ";").length() > 0) {
							fieldSeparator_tFileInputDelimited_ListType = ((String) ";").toCharArray();
						} else {
							throw new IllegalArgumentException("Field Separator must be assigned a char.");
						}
						if (rowtFileInputDelimited.length == 1 && ("\015").equals(rowtFileInputDelimited[0])) {// empty
																												// line
																												// when
																												// row
																												// separator
																												// is
																												// '\n'

							Row.row100 = null;

							Row.row101 = null;

							Row.row102 = null;

							Row.row103 = null;

							Row.row104 = null;

							Row.row105 = null;

							Row.row106 = null;

							Row.row107 = null;

							Row.row108 = null;

							Row.row109 = null;

							Row.row110 = null;

							Row.row111 = null;

							Row.row112 = null;

							Row.row113 = null;

							Row.row114 = null;

							Row.row115 = null;

							Row.row116 = null;

							Row.row117 = null;

							Row.row118 = null;

							Row.row119 = null;

							Row.row120 = null;

							Row.row121 = null;

							Row.row122 = null;

							Row.row123 = null;

							Row.row124 = null;

							Row.row125 = null;

							Row.row126 = null;

							Row.row127 = null;

							Row.row128 = null;

							Row.row129 = null;

							Row.row130 = null;

							Row.row131 = null;

							Row.row132 = null;

							Row.row133 = null;

							Row.row134 = null;

							Row.row135 = null;

							Row.row136 = null;

							Row.row137 = null;

							Row.row138 = null;

							Row.row139 = null;

							Row.row140 = null;

							Row.row141 = null;

							Row.row142 = null;

							Row.row143 = null;

							Row.row144 = null;

							Row.row145 = null;

							Row.row146 = null;

							Row.row147 = null;

							Row.row148 = null;

							Row.row149 = null;

							Row.row150 = null;

							Row.row151 = null;

							Row.row152 = null;

							Row.row153 = null;

							Row.row154 = null;

							Row.row155 = null;

							Row.row156 = null;

							Row.row157 = null;

							Row.row158 = null;

							Row.row159 = null;

							Row.row160 = null;

							Row.row161 = null;

							Row.row162 = null;

							Row.row163 = null;

							Row.row164 = null;

							Row.row165 = null;

							Row.row166 = null;

							Row.row167 = null;

							Row.row168 = null;

							Row.row169 = null;

							Row.row170 = null;

							Row.row171 = null;

							Row.row172 = null;

							Row.row173 = null;

							Row.row174 = null;

							Row.row175 = null;

							Row.row176 = null;

							Row.row177 = null;

							Row.row178 = null;

							Row.row179 = null;

							Row.row180 = null;

							Row.row181 = null;

							Row.row182 = null;

							Row.row183 = null;

							Row.row184 = null;

							Row.row185 = null;

							Row.row186 = null;

							Row.row187 = null;

							Row.row188 = null;

							Row.row189 = null;

							Row.row190 = null;

							Row.row191 = null;

							Row.row192 = null;

							Row.row193 = null;

							Row.row194 = null;

							Row.row195 = null;

							Row.row196 = null;

							Row.row197 = null;

							Row.row198 = null;

							Row.row199 = null;

						} else {

							int columnIndexWithD_tFileInputDelimited = 0; // Column Index

							columnIndexWithD_tFileInputDelimited = 100;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row100 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row100 = null;

							}

							columnIndexWithD_tFileInputDelimited = 101;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row101 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row101 = null;

							}

							columnIndexWithD_tFileInputDelimited = 102;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row102 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row102 = null;

							}

							columnIndexWithD_tFileInputDelimited = 103;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row103 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row103 = null;

							}

							columnIndexWithD_tFileInputDelimited = 104;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row104 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row104 = null;

							}

							columnIndexWithD_tFileInputDelimited = 105;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row105 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row105 = null;

							}

							columnIndexWithD_tFileInputDelimited = 106;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row106 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row106 = null;

							}

							columnIndexWithD_tFileInputDelimited = 107;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row107 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row107 = null;

							}

							columnIndexWithD_tFileInputDelimited = 108;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row108 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row108 = null;

							}

							columnIndexWithD_tFileInputDelimited = 109;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row109 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row109 = null;

							}

							columnIndexWithD_tFileInputDelimited = 110;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row110 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row110 = null;

							}

							columnIndexWithD_tFileInputDelimited = 111;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row111 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row111 = null;

							}

							columnIndexWithD_tFileInputDelimited = 112;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row112 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row112 = null;

							}

							columnIndexWithD_tFileInputDelimited = 113;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row113 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row113 = null;

							}

							columnIndexWithD_tFileInputDelimited = 114;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row114 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row114 = null;

							}

							columnIndexWithD_tFileInputDelimited = 115;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row115 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row115 = null;

							}

							columnIndexWithD_tFileInputDelimited = 116;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row116 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row116 = null;

							}

							columnIndexWithD_tFileInputDelimited = 117;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row117 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row117 = null;

							}

							columnIndexWithD_tFileInputDelimited = 118;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row118 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row118 = null;

							}

							columnIndexWithD_tFileInputDelimited = 119;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row119 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row119 = null;

							}

							columnIndexWithD_tFileInputDelimited = 120;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row120 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row120 = null;

							}

							columnIndexWithD_tFileInputDelimited = 121;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row121 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row121 = null;

							}

							columnIndexWithD_tFileInputDelimited = 122;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row122 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row122 = null;

							}

							columnIndexWithD_tFileInputDelimited = 123;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row123 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row123 = null;

							}

							columnIndexWithD_tFileInputDelimited = 124;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row124 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row124 = null;

							}

							columnIndexWithD_tFileInputDelimited = 125;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row125 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row125 = null;

							}

							columnIndexWithD_tFileInputDelimited = 126;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row126 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row126 = null;

							}

							columnIndexWithD_tFileInputDelimited = 127;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row127 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row127 = null;

							}

							columnIndexWithD_tFileInputDelimited = 128;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row128 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row128 = null;

							}

							columnIndexWithD_tFileInputDelimited = 129;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row129 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row129 = null;

							}

							columnIndexWithD_tFileInputDelimited = 130;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row130 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row130 = null;

							}

							columnIndexWithD_tFileInputDelimited = 131;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row131 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row131 = null;

							}

							columnIndexWithD_tFileInputDelimited = 132;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row132 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row132 = null;

							}

							columnIndexWithD_tFileInputDelimited = 133;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row133 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row133 = null;

							}

							columnIndexWithD_tFileInputDelimited = 134;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row134 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row134 = null;

							}

							columnIndexWithD_tFileInputDelimited = 135;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row135 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row135 = null;

							}

							columnIndexWithD_tFileInputDelimited = 136;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row136 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row136 = null;

							}

							columnIndexWithD_tFileInputDelimited = 137;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row137 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row137 = null;

							}

							columnIndexWithD_tFileInputDelimited = 138;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row138 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row138 = null;

							}

							columnIndexWithD_tFileInputDelimited = 139;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row139 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row139 = null;

							}

							columnIndexWithD_tFileInputDelimited = 140;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row140 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row140 = null;

							}

							columnIndexWithD_tFileInputDelimited = 141;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row141 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row141 = null;

							}

							columnIndexWithD_tFileInputDelimited = 142;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row142 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row142 = null;

							}

							columnIndexWithD_tFileInputDelimited = 143;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row143 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row143 = null;

							}

							columnIndexWithD_tFileInputDelimited = 144;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row144 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row144 = null;

							}

							columnIndexWithD_tFileInputDelimited = 145;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row145 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row145 = null;

							}

							columnIndexWithD_tFileInputDelimited = 146;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row146 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row146 = null;

							}

							columnIndexWithD_tFileInputDelimited = 147;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row147 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row147 = null;

							}

							columnIndexWithD_tFileInputDelimited = 148;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row148 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row148 = null;

							}

							columnIndexWithD_tFileInputDelimited = 149;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row149 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row149 = null;

							}

							columnIndexWithD_tFileInputDelimited = 150;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row150 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row150 = null;

							}

							columnIndexWithD_tFileInputDelimited = 151;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row151 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row151 = null;

							}

							columnIndexWithD_tFileInputDelimited = 152;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row152 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row152 = null;

							}

							columnIndexWithD_tFileInputDelimited = 153;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row153 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row153 = null;

							}

							columnIndexWithD_tFileInputDelimited = 154;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row154 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row154 = null;

							}

							columnIndexWithD_tFileInputDelimited = 155;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row155 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row155 = null;

							}

							columnIndexWithD_tFileInputDelimited = 156;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row156 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row156 = null;

							}

							columnIndexWithD_tFileInputDelimited = 157;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row157 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row157 = null;

							}

							columnIndexWithD_tFileInputDelimited = 158;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row158 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row158 = null;

							}

							columnIndexWithD_tFileInputDelimited = 159;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row159 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row159 = null;

							}

							columnIndexWithD_tFileInputDelimited = 160;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row160 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row160 = null;

							}

							columnIndexWithD_tFileInputDelimited = 161;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row161 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row161 = null;

							}

							columnIndexWithD_tFileInputDelimited = 162;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row162 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row162 = null;

							}

							columnIndexWithD_tFileInputDelimited = 163;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row163 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row163 = null;

							}

							columnIndexWithD_tFileInputDelimited = 164;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row164 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row164 = null;

							}

							columnIndexWithD_tFileInputDelimited = 165;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row165 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row165 = null;

							}

							columnIndexWithD_tFileInputDelimited = 166;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row166 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row166 = null;

							}

							columnIndexWithD_tFileInputDelimited = 167;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row167 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row167 = null;

							}

							columnIndexWithD_tFileInputDelimited = 168;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row168 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row168 = null;

							}

							columnIndexWithD_tFileInputDelimited = 169;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row169 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row169 = null;

							}

							columnIndexWithD_tFileInputDelimited = 170;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row170 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row170 = null;

							}

							columnIndexWithD_tFileInputDelimited = 171;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row171 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row171 = null;

							}

							columnIndexWithD_tFileInputDelimited = 172;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row172 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row172 = null;

							}

							columnIndexWithD_tFileInputDelimited = 173;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row173 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row173 = null;

							}

							columnIndexWithD_tFileInputDelimited = 174;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row174 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row174 = null;

							}

							columnIndexWithD_tFileInputDelimited = 175;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row175 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row175 = null;

							}

							columnIndexWithD_tFileInputDelimited = 176;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row176 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row176 = null;

							}

							columnIndexWithD_tFileInputDelimited = 177;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row177 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row177 = null;

							}

							columnIndexWithD_tFileInputDelimited = 178;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row178 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row178 = null;

							}

							columnIndexWithD_tFileInputDelimited = 179;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row179 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row179 = null;

							}

							columnIndexWithD_tFileInputDelimited = 180;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row180 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row180 = null;

							}

							columnIndexWithD_tFileInputDelimited = 181;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row181 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row181 = null;

							}

							columnIndexWithD_tFileInputDelimited = 182;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row182 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row182 = null;

							}

							columnIndexWithD_tFileInputDelimited = 183;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row183 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row183 = null;

							}

							columnIndexWithD_tFileInputDelimited = 184;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row184 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row184 = null;

							}

							columnIndexWithD_tFileInputDelimited = 185;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row185 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row185 = null;

							}

							columnIndexWithD_tFileInputDelimited = 186;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row186 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row186 = null;

							}

							columnIndexWithD_tFileInputDelimited = 187;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row187 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row187 = null;

							}

							columnIndexWithD_tFileInputDelimited = 188;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row188 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row188 = null;

							}

							columnIndexWithD_tFileInputDelimited = 189;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row189 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row189 = null;

							}

							columnIndexWithD_tFileInputDelimited = 190;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row190 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row190 = null;

							}

							columnIndexWithD_tFileInputDelimited = 191;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row191 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row191 = null;

							}

							columnIndexWithD_tFileInputDelimited = 192;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row192 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row192 = null;

							}

							columnIndexWithD_tFileInputDelimited = 193;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row193 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row193 = null;

							}

							columnIndexWithD_tFileInputDelimited = 194;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row194 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row194 = null;

							}

							columnIndexWithD_tFileInputDelimited = 195;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row195 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row195 = null;

							}

							columnIndexWithD_tFileInputDelimited = 196;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row196 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row196 = null;

							}

							columnIndexWithD_tFileInputDelimited = 197;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row197 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row197 = null;

							}

							columnIndexWithD_tFileInputDelimited = 198;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row198 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row198 = null;

							}

							columnIndexWithD_tFileInputDelimited = 199;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row199 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row199 = null;

							}

						}

					}

					public void valueToConn_2(String[] rowtFileInputDelimited, RowStruct Row)
							throws java.lang.Exception {

						char fieldSeparator_tFileInputDelimited_ListType[] = null;
						// support passing value (property: Field Separator) by 'context.fs' or
						// 'globalMap.get("fs")'.
						if (((String) ";").length() > 0) {
							fieldSeparator_tFileInputDelimited_ListType = ((String) ";").toCharArray();
						} else {
							throw new IllegalArgumentException("Field Separator must be assigned a char.");
						}
						if (rowtFileInputDelimited.length == 1 && ("\015").equals(rowtFileInputDelimited[0])) {// empty
																												// line
																												// when
																												// row
																												// separator
																												// is
																												// '\n'

							Row.row200 = null;

							Row.row201 = null;

							Row.row202 = null;

							Row.row203 = null;

							Row.row204 = null;

							Row.row205 = null;

							Row.row206 = null;

							Row.row207 = null;

							Row.row208 = null;

							Row.row209 = null;

							Row.row210 = null;

							Row.row211 = null;

							Row.row212 = null;

							Row.row213 = null;

							Row.row214 = null;

							Row.row215 = null;

							Row.row216 = null;

							Row.row217 = null;

							Row.row218 = null;

							Row.row219 = null;

							Row.row220 = null;

							Row.row221 = null;

							Row.row222 = null;

							Row.row223 = null;

							Row.row224 = null;

							Row.row225 = null;

							Row.row226 = null;

							Row.row227 = null;

							Row.row228 = null;

							Row.row229 = null;

							Row.row230 = null;

							Row.row231 = null;

							Row.row232 = null;

							Row.row233 = null;

							Row.row234 = null;

							Row.row235 = null;

							Row.row236 = null;

							Row.row237 = null;

							Row.row238 = null;

							Row.row239 = null;

							Row.row240 = null;

							Row.row241 = null;

							Row.row242 = null;

							Row.row243 = null;

							Row.row244 = null;

							Row.row245 = null;

							Row.row246 = null;

							Row.row247 = null;

							Row.row248 = null;

							Row.row249 = null;

							Row.row250 = null;

							Row.row251 = null;

							Row.row252 = null;

							Row.row253 = null;

							Row.row254 = null;

							Row.row255 = null;

						} else {

							int columnIndexWithD_tFileInputDelimited = 0; // Column Index

							columnIndexWithD_tFileInputDelimited = 200;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row200 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row200 = null;

							}

							columnIndexWithD_tFileInputDelimited = 201;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row201 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row201 = null;

							}

							columnIndexWithD_tFileInputDelimited = 202;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row202 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row202 = null;

							}

							columnIndexWithD_tFileInputDelimited = 203;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row203 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row203 = null;

							}

							columnIndexWithD_tFileInputDelimited = 204;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row204 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row204 = null;

							}

							columnIndexWithD_tFileInputDelimited = 205;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row205 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row205 = null;

							}

							columnIndexWithD_tFileInputDelimited = 206;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row206 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row206 = null;

							}

							columnIndexWithD_tFileInputDelimited = 207;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row207 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row207 = null;

							}

							columnIndexWithD_tFileInputDelimited = 208;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row208 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row208 = null;

							}

							columnIndexWithD_tFileInputDelimited = 209;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row209 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row209 = null;

							}

							columnIndexWithD_tFileInputDelimited = 210;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row210 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row210 = null;

							}

							columnIndexWithD_tFileInputDelimited = 211;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row211 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row211 = null;

							}

							columnIndexWithD_tFileInputDelimited = 212;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row212 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row212 = null;

							}

							columnIndexWithD_tFileInputDelimited = 213;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row213 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row213 = null;

							}

							columnIndexWithD_tFileInputDelimited = 214;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row214 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row214 = null;

							}

							columnIndexWithD_tFileInputDelimited = 215;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row215 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row215 = null;

							}

							columnIndexWithD_tFileInputDelimited = 216;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row216 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row216 = null;

							}

							columnIndexWithD_tFileInputDelimited = 217;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row217 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row217 = null;

							}

							columnIndexWithD_tFileInputDelimited = 218;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row218 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row218 = null;

							}

							columnIndexWithD_tFileInputDelimited = 219;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row219 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row219 = null;

							}

							columnIndexWithD_tFileInputDelimited = 220;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row220 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row220 = null;

							}

							columnIndexWithD_tFileInputDelimited = 221;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row221 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row221 = null;

							}

							columnIndexWithD_tFileInputDelimited = 222;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row222 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row222 = null;

							}

							columnIndexWithD_tFileInputDelimited = 223;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row223 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row223 = null;

							}

							columnIndexWithD_tFileInputDelimited = 224;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row224 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row224 = null;

							}

							columnIndexWithD_tFileInputDelimited = 225;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row225 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row225 = null;

							}

							columnIndexWithD_tFileInputDelimited = 226;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row226 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row226 = null;

							}

							columnIndexWithD_tFileInputDelimited = 227;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row227 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row227 = null;

							}

							columnIndexWithD_tFileInputDelimited = 228;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row228 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row228 = null;

							}

							columnIndexWithD_tFileInputDelimited = 229;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row229 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row229 = null;

							}

							columnIndexWithD_tFileInputDelimited = 230;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row230 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row230 = null;

							}

							columnIndexWithD_tFileInputDelimited = 231;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row231 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row231 = null;

							}

							columnIndexWithD_tFileInputDelimited = 232;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row232 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row232 = null;

							}

							columnIndexWithD_tFileInputDelimited = 233;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row233 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row233 = null;

							}

							columnIndexWithD_tFileInputDelimited = 234;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row234 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row234 = null;

							}

							columnIndexWithD_tFileInputDelimited = 235;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row235 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row235 = null;

							}

							columnIndexWithD_tFileInputDelimited = 236;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row236 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row236 = null;

							}

							columnIndexWithD_tFileInputDelimited = 237;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row237 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row237 = null;

							}

							columnIndexWithD_tFileInputDelimited = 238;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row238 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row238 = null;

							}

							columnIndexWithD_tFileInputDelimited = 239;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row239 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row239 = null;

							}

							columnIndexWithD_tFileInputDelimited = 240;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row240 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row240 = null;

							}

							columnIndexWithD_tFileInputDelimited = 241;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row241 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row241 = null;

							}

							columnIndexWithD_tFileInputDelimited = 242;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row242 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row242 = null;

							}

							columnIndexWithD_tFileInputDelimited = 243;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row243 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row243 = null;

							}

							columnIndexWithD_tFileInputDelimited = 244;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row244 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row244 = null;

							}

							columnIndexWithD_tFileInputDelimited = 245;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row245 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row245 = null;

							}

							columnIndexWithD_tFileInputDelimited = 246;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row246 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row246 = null;

							}

							columnIndexWithD_tFileInputDelimited = 247;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row247 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row247 = null;

							}

							columnIndexWithD_tFileInputDelimited = 248;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row248 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row248 = null;

							}

							columnIndexWithD_tFileInputDelimited = 249;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row249 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row249 = null;

							}

							columnIndexWithD_tFileInputDelimited = 250;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row250 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row250 = null;

							}

							columnIndexWithD_tFileInputDelimited = 251;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row251 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row251 = null;

							}

							columnIndexWithD_tFileInputDelimited = 252;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row252 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row252 = null;

							}

							columnIndexWithD_tFileInputDelimited = 253;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row253 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row253 = null;

							}

							columnIndexWithD_tFileInputDelimited = 254;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row254 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row254 = null;

							}

							columnIndexWithD_tFileInputDelimited = 255;

							if (columnIndexWithD_tFileInputDelimited < rowtFileInputDelimited.length) {

								Row.row255 = rowtFileInputDelimited[columnIndexWithD_tFileInputDelimited];

							} else {

								Row.row255 = null;

							}

						}

					}

					public void valueToConn(String[] rowtFileInputDelimited, RowStruct Row) throws java.lang.Exception {

						valueToConn_0(rowtFileInputDelimited, Row);

						valueToConn_1(rowtFileInputDelimited, Row);

						valueToConn_2(rowtFileInputDelimited, Row);

					}

				}
				RowHelper_tFileInputDelimited rowHelper_tFileInputDelimited = new RowHelper_tFileInputDelimited();

				int nb_line_tFileInputDelimited = 0;
				int footer_tFileInputDelimited = 0;
				int totalLinetFileInputDelimited = 0;
				int limittFileInputDelimited = 50;
				int lastLinetFileInputDelimited = -1;

				char fieldSeparator_tFileInputDelimited[] = null;

				// support passing value (property: Field Separator) by 'context.fs' or
				// 'globalMap.get("fs")'.
				if (((String) ";").length() > 0) {
					fieldSeparator_tFileInputDelimited = ((String) ";").toCharArray();
				} else {
					throw new IllegalArgumentException("Field Separator must be assigned a char.");
				}

				char rowSeparator_tFileInputDelimited[] = null;

				// support passing value (property: Row Separator) by 'context.rs' or
				// 'globalMap.get("rs")'.
				if (((String) "\n").length() > 0) {
					rowSeparator_tFileInputDelimited = ((String) "\n").toCharArray();
				} else {
					throw new IllegalArgumentException("Row Separator must be assigned a char.");
				}

				Object filename_tFileInputDelimited = /** Start field tFileInputDelimited:FILENAME */
						"/Users/tungnguyen/Desktop/dbconnection_params.csv"/** End field tFileInputDelimited:FILENAME */
				;
				com.talend.csv.CSVReader csvReadertFileInputDelimited = null;

				try {

					String[] rowtFileInputDelimited = null;
					int currentLinetFileInputDelimited = 0;
					int outputLinetFileInputDelimited = 0;
					try {// TD110 begin
						if (filename_tFileInputDelimited instanceof java.io.InputStream) {

							int footer_value_tFileInputDelimited = 0;
							if (footer_value_tFileInputDelimited > 0) {
								throw new java.lang.Exception(
										"When the input source is a stream,footer shouldn't be bigger than 0.");
							}

							csvReadertFileInputDelimited = new com.talend.csv.CSVReader(
									(java.io.InputStream) filename_tFileInputDelimited,
									fieldSeparator_tFileInputDelimited[0], "UTF-8");
						} else {
							csvReadertFileInputDelimited = new com.talend.csv.CSVReader(
									new java.io.BufferedReader(new java.io.InputStreamReader(
											new java.io.FileInputStream(String.valueOf(filename_tFileInputDelimited)),
											"UTF-8")),
									fieldSeparator_tFileInputDelimited[0]);
						}

						csvReadertFileInputDelimited.setTrimWhitespace(false);
						if ((rowSeparator_tFileInputDelimited[0] != '\n')
								&& (rowSeparator_tFileInputDelimited[0] != '\r'))
							csvReadertFileInputDelimited.setLineEnd("" + rowSeparator_tFileInputDelimited[0]);

						csvReadertFileInputDelimited.setQuoteChar(' ');

						// ?????doesn't work for other escapeChar
						// the default escape mode is double escape
						csvReadertFileInputDelimited.setEscapeChar(csvReadertFileInputDelimited.getQuoteChar());

						if (footer_tFileInputDelimited > 0) {
							for (totalLinetFileInputDelimited = 0; totalLinetFileInputDelimited < 0; totalLinetFileInputDelimited++) {
								csvReadertFileInputDelimited.readNext();
							}
							csvReadertFileInputDelimited.setSkipEmptyRecords(false);
							while (csvReadertFileInputDelimited.readNext()) {

								totalLinetFileInputDelimited++;

							}
							int lastLineTemptFileInputDelimited = totalLinetFileInputDelimited
									- footer_tFileInputDelimited < 0 ? 0
											: totalLinetFileInputDelimited - footer_tFileInputDelimited;
							if (lastLinetFileInputDelimited > 0) {
								lastLinetFileInputDelimited = lastLinetFileInputDelimited < lastLineTemptFileInputDelimited
										? lastLinetFileInputDelimited
										: lastLineTemptFileInputDelimited;
							} else {
								lastLinetFileInputDelimited = lastLineTemptFileInputDelimited;
							}

							csvReadertFileInputDelimited.close();
							if (filename_tFileInputDelimited instanceof java.io.InputStream) {
								csvReadertFileInputDelimited = new com.talend.csv.CSVReader(
										(java.io.InputStream) filename_tFileInputDelimited,
										fieldSeparator_tFileInputDelimited[0], "UTF-8");
							} else {
								csvReadertFileInputDelimited = new com.talend.csv.CSVReader(
										new java.io.BufferedReader(
												new java.io.InputStreamReader(
														new java.io.FileInputStream(
																String.valueOf(filename_tFileInputDelimited)),
														"UTF-8")),
										fieldSeparator_tFileInputDelimited[0]);
							}
							csvReadertFileInputDelimited.setTrimWhitespace(false);
							if ((rowSeparator_tFileInputDelimited[0] != '\n')
									&& (rowSeparator_tFileInputDelimited[0] != '\r'))
								csvReadertFileInputDelimited.setLineEnd("" + rowSeparator_tFileInputDelimited[0]);

							csvReadertFileInputDelimited.setQuoteChar(' ');

							// ?????doesn't work for other escapeChar
							// the default escape mode is double escape
							csvReadertFileInputDelimited.setEscapeChar(csvReadertFileInputDelimited.getQuoteChar());

						}

						if (limittFileInputDelimited != 0) {
							for (currentLinetFileInputDelimited = 0; currentLinetFileInputDelimited < 0; currentLinetFileInputDelimited++) {
								csvReadertFileInputDelimited.readNext();
							}
						}
						csvReadertFileInputDelimited.setSkipEmptyRecords(false);

					} catch (java.lang.Exception e) {

						System.err.println(e.getMessage());

					} // TD110 end

					while (limittFileInputDelimited != 0 && csvReadertFileInputDelimited != null
							&& csvReadertFileInputDelimited.readNext()) {
						rowstate_tFileInputDelimited.reset();

						rowtFileInputDelimited = csvReadertFileInputDelimited.getValues();

						currentLinetFileInputDelimited++;

						if (lastLinetFileInputDelimited > -1
								&& currentLinetFileInputDelimited > lastLinetFileInputDelimited) {
							break;
						}
						outputLinetFileInputDelimited++;
						if (limittFileInputDelimited > 0 && outputLinetFileInputDelimited > limittFileInputDelimited) {
							break;
						}

						Row = null;

						boolean whetherReject_tFileInputDelimited = false;
						Row = new RowStruct();
						try {

							rowHelper_tFileInputDelimited.valueToConn(rowtFileInputDelimited, Row);

							if (rowstate_tFileInputDelimited.getException() != null) {
								throw rowstate_tFileInputDelimited.getException();
							}

						} catch (java.lang.Exception e) {
							whetherReject_tFileInputDelimited = true;

							System.err.println(e.getMessage());
							Row = null;

						}

						/**
						 * [tFileInputDelimited begin ] stop
						 */

						/**
						 * [tFileInputDelimited main ] start
						 */

						currentComponent = "tFileInputDelimited";

						tos_count_tFileInputDelimited++;

						/**
						 * [tFileInputDelimited main ] stop
						 */

						/**
						 * [tFileInputDelimited process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited";

						/**
						 * [tFileInputDelimited process_data_begin ] stop
						 */
// Start of branch "Row"
						if (Row != null) {

							/**
							 * [tFileOutputDelimited main ] start
							 */

							currentComponent = "tFileOutputDelimited";

							String[] rowtFileOutputDelimited = new String[256];
							fileOutputDelimitedUtil_tFileOutputDelimited.putValue_0(Row, rowtFileOutputDelimited);
							fileOutputDelimitedUtil_tFileOutputDelimited.putValue_1(Row, rowtFileOutputDelimited);
							fileOutputDelimitedUtil_tFileOutputDelimited.putValue_2(Row, rowtFileOutputDelimited);
							nb_line_tFileOutputDelimited++;
							resourceMap.put("nb_line_tFileOutputDelimited", nb_line_tFileOutputDelimited);
							CsvWritertFileOutputDelimited.writeNext(rowtFileOutputDelimited);

							tos_count_tFileOutputDelimited++;

							/**
							 * [tFileOutputDelimited main ] stop
							 */

							/**
							 * [tFileOutputDelimited process_data_begin ] start
							 */

							currentComponent = "tFileOutputDelimited";

							/**
							 * [tFileOutputDelimited process_data_begin ] stop
							 */

							/**
							 * [tFileOutputDelimited process_data_end ] start
							 */

							currentComponent = "tFileOutputDelimited";

							/**
							 * [tFileOutputDelimited process_data_end ] stop
							 */

						} // End of branch "Row"

						/**
						 * [tFileInputDelimited process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited";

						/**
						 * [tFileInputDelimited process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited end ] start
						 */

						currentComponent = "tFileInputDelimited";

						nb_line_tFileInputDelimited++;
					}

				} finally {
					if (!(filename_tFileInputDelimited instanceof java.io.InputStream)) {
						if (csvReadertFileInputDelimited != null) {
							csvReadertFileInputDelimited.close();
						}
					}
					if (csvReadertFileInputDelimited != null) {
						globalMap.put("tFileInputDelimited_NB_LINE", nb_line_tFileInputDelimited);
					}

				}

				ok_Hash.put("tFileInputDelimited", true);
				end_Hash.put("tFileInputDelimited", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited end ] stop
				 */

				/**
				 * [tFileOutputDelimited end ] start
				 */

				currentComponent = "tFileOutputDelimited";

				if (CsvWritertFileOutputDelimited != null) {
					CsvWritertFileOutputDelimited.close();
				}

				globalMap.put("tFileOutputDelimited_NB_LINE", nb_line_tFileOutputDelimited);

				resourceMap.put("finish_tFileOutputDelimited", true);

				ok_Hash.put("tFileOutputDelimited", true);
				end_Hash.put("tFileOutputDelimited", System.currentTimeMillis());

				/**
				 * [tFileOutputDelimited end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputDelimited finally ] start
				 */

				currentComponent = "tFileInputDelimited";

				/**
				 * [tFileInputDelimited finally ] stop
				 */

				/**
				 * [tFileOutputDelimited finally ] start
				 */

				currentComponent = "tFileOutputDelimited";

				if (resourceMap.get("finish_tFileOutputDelimited") == null) {

					com.talend.csv.CSVWriter CsvWritertFileOutputDelimited = (com.talend.csv.CSVWriter) resourceMap
							.get("CsvWriter_tFileOutputDelimited");

					if (CsvWritertFileOutputDelimited != null) {
						CsvWritertFileOutputDelimited.close();
					}

				}

				/**
				 * [tFileOutputDelimited finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Shadow";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	private PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final ShadowFileInputToDelimitedOutput ShadowFileInputToDelimitedOutputClass = new ShadowFileInputToDelimitedOutput();

		int exitCode = ShadowFileInputToDelimitedOutputClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = ShadowFileInputToDelimitedOutput.class.getClassLoader().getResourceAsStream(
					"vincere_etl/shadowfileinputtodelimitedoutput_0_1/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = ShadowFileInputToDelimitedOutput.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				// defaultProps is in order to keep the original context value
				if (context != null && context.isEmpty()) {
					defaultProps.load(inContext);
					context = new ContextProperties(defaultProps);
				}

				inContext.close();
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tFileInputDelimitedProcess(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputDelimited) {
			globalMap.put("tFileInputDelimited_SUBPROCESS_STATE", -1);

			e_tFileInputDelimited.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory)
					+ " bytes memory increase when running : ShadowFileInputToDelimitedOutput");
		}

		int returnCode = 0;
		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring=")) {// for trunjob call
			enableLogStash = "true".equalsIgnoreCase(arg.substring(13));
		}

		if (!enableLogStash) {
			enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 249128 characters generated by Talend Open Studio for Data Integration on the
 * November 24, 2019 at 11:39:22 AM ICT
 ************************************************************************************************/